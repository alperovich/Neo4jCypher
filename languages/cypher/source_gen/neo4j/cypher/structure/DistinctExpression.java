package neo4j.cypher.structure;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.structure.Expression;
import jetbrains.mps.smodel.SNode;
import java.util.Iterator;
import jetbrains.mps.lang.core.structure.Attribute;
import java.util.List;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class DistinctExpression extends Expression implements ICypherExpression, IReturnExpression {
  public static final String concept = "neo4j.cypher.structure.DistinctExpression";
  public static final String SHORT_DESCRIPTION = "shortDescription";
  public static final String ALIAS = "alias";
  public static final String VIRTUAL_PACKAGE = "virtualPackage";
  public static final String EXPRESSION = "expression";
  public static final String SMODEL_ATTRIBUTE = "smodelAttribute";

  public DistinctExpression(SNode node) {
    super(node);
  }

  public String getShortDescription() {
    return this.getProperty(DistinctExpression.SHORT_DESCRIPTION);
  }

  public void setShortDescription(String value) {
    this.setProperty(DistinctExpression.SHORT_DESCRIPTION, value);
  }

  public String getAlias() {
    return this.getProperty(DistinctExpression.ALIAS);
  }

  public void setAlias(String value) {
    this.setProperty(DistinctExpression.ALIAS, value);
  }

  public String getVirtualPackage() {
    return this.getProperty(DistinctExpression.VIRTUAL_PACKAGE);
  }

  public void setVirtualPackage(String value) {
    this.setProperty(DistinctExpression.VIRTUAL_PACKAGE, value);
  }

  public Expression getExpression() {
    return (Expression) this.getChild(Expression.class, DistinctExpression.EXPRESSION);
  }

  public void setExpression(Expression node) {
    super.setChild(DistinctExpression.EXPRESSION, node);
  }

  public int getSmodelAttributesCount() {
    return this.getChildCount(DistinctExpression.SMODEL_ATTRIBUTE);
  }

  public Iterator<Attribute> smodelAttributes() {
    return this.children(Attribute.class, DistinctExpression.SMODEL_ATTRIBUTE);
  }

  public List<Attribute> getSmodelAttributes() {
    return this.getChildren(Attribute.class, DistinctExpression.SMODEL_ATTRIBUTE);
  }

  public void addSmodelAttribute(Attribute node) {
    this.addChild(DistinctExpression.SMODEL_ATTRIBUTE, node);
  }

  public void insertSmodelAttribute(Attribute prev, Attribute node) {
    this.insertChild(prev, DistinctExpression.SMODEL_ATTRIBUTE, node);
  }

  public static DistinctExpression newInstance(SModel sm, boolean init) {
    return (DistinctExpression) SModelUtil_new.instantiateConceptDeclaration("neo4j.cypher.structure.DistinctExpression", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static DistinctExpression newInstance(SModel sm) {
    return DistinctExpression.newInstance(sm, false);
  }
}
