package neo4j.cypher.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import java.util.Iterator;
import java.util.List;
import jetbrains.mps.lang.core.structure.Attribute;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class CreateStatement extends CypherStatement implements IWriteStatement {
  public static final String concept = "neo4j.cypher.structure.CreateStatement";
  public static final String SHORT_DESCRIPTION = "shortDescription";
  public static final String ALIAS = "alias";
  public static final String VIRTUAL_PACKAGE = "virtualPackage";
  public static final String UNIQUE = "unique";
  public static final String PATH_EXPRESSION = "pathExpression";
  public static final String SMODEL_ATTRIBUTE = "smodelAttribute";

  public CreateStatement(SNode node) {
    super(node);
  }

  public String getShortDescription() {
    return this.getProperty(CreateStatement.SHORT_DESCRIPTION);
  }

  public void setShortDescription(String value) {
    this.setProperty(CreateStatement.SHORT_DESCRIPTION, value);
  }

  public String getAlias() {
    return this.getProperty(CreateStatement.ALIAS);
  }

  public void setAlias(String value) {
    this.setProperty(CreateStatement.ALIAS, value);
  }

  public String getVirtualPackage() {
    return this.getProperty(CreateStatement.VIRTUAL_PACKAGE);
  }

  public void setVirtualPackage(String value) {
    this.setProperty(CreateStatement.VIRTUAL_PACKAGE, value);
  }

  public boolean getUnique() {
    return this.getBooleanProperty(CreateStatement.UNIQUE);
  }

  public void setUnique(boolean value) {
    this.setBooleanProperty(CreateStatement.UNIQUE, value);
  }

  public int getPathExpressionsCount() {
    return this.getChildCount(CreateStatement.PATH_EXPRESSION);
  }

  public Iterator<PathExpression> pathExpressions() {
    return this.children(PathExpression.class, CreateStatement.PATH_EXPRESSION);
  }

  public List<PathExpression> getPathExpressions() {
    return this.getChildren(PathExpression.class, CreateStatement.PATH_EXPRESSION);
  }

  public void addPathExpression(PathExpression node) {
    this.addChild(CreateStatement.PATH_EXPRESSION, node);
  }

  public void insertPathExpression(PathExpression prev, PathExpression node) {
    this.insertChild(prev, CreateStatement.PATH_EXPRESSION, node);
  }

  public int getSmodelAttributesCount() {
    return this.getChildCount(CreateStatement.SMODEL_ATTRIBUTE);
  }

  public Iterator<Attribute> smodelAttributes() {
    return this.children(Attribute.class, CreateStatement.SMODEL_ATTRIBUTE);
  }

  public List<Attribute> getSmodelAttributes() {
    return this.getChildren(Attribute.class, CreateStatement.SMODEL_ATTRIBUTE);
  }

  public void addSmodelAttribute(Attribute node) {
    this.addChild(CreateStatement.SMODEL_ATTRIBUTE, node);
  }

  public void insertSmodelAttribute(Attribute prev, Attribute node) {
    this.insertChild(prev, CreateStatement.SMODEL_ATTRIBUTE, node);
  }

  public static CreateStatement newInstance(SModel sm, boolean init) {
    return (CreateStatement) SModelUtil_new.instantiateConceptDeclaration("neo4j.cypher.structure.CreateStatement", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static CreateStatement newInstance(SModel sm) {
    return CreateStatement.newInstance(sm, false);
  }
}
