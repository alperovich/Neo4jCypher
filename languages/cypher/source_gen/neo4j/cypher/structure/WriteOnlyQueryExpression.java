package neo4j.cypher.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import java.util.Iterator;
import java.util.List;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class WriteOnlyQueryExpression extends QueryExpression {
  public static final String concept = "neo4j.cypher.structure.WriteOnlyQueryExpression";
  public static final String START_STATEMENT = "startStatement";
  public static final String CREATE_STATEMENT = "createStatement";
  public static final String WRITE_STATEMENT = "writeStatement";

  public WriteOnlyQueryExpression(SNode node) {
    super(node);
  }

  public StartStatement getStartStatement() {
    return (StartStatement) this.getChild(StartStatement.class, WriteOnlyQueryExpression.START_STATEMENT);
  }

  public void setStartStatement(StartStatement node) {
    super.setChild(WriteOnlyQueryExpression.START_STATEMENT, node);
  }

  public CreateStatement getCreateStatement() {
    return (CreateStatement) this.getChild(CreateStatement.class, WriteOnlyQueryExpression.CREATE_STATEMENT);
  }

  public void setCreateStatement(CreateStatement node) {
    super.setChild(WriteOnlyQueryExpression.CREATE_STATEMENT, node);
  }

  public int getWriteStatementsCount() {
    return this.getChildCount(WriteOnlyQueryExpression.WRITE_STATEMENT);
  }

  public Iterator<IWriteStatement> writeStatements() {
    return this.children(IWriteStatement.class, WriteOnlyQueryExpression.WRITE_STATEMENT);
  }

  public List<IWriteStatement> getWriteStatements() {
    return this.getChildren(IWriteStatement.class, WriteOnlyQueryExpression.WRITE_STATEMENT);
  }

  public void addWriteStatement(IWriteStatement node) {
    this.addChild(WriteOnlyQueryExpression.WRITE_STATEMENT, node);
  }

  public void insertWriteStatement(IWriteStatement prev, IWriteStatement node) {
    this.insertChild(prev, WriteOnlyQueryExpression.WRITE_STATEMENT, node);
  }

  public static WriteOnlyQueryExpression newInstance(SModel sm, boolean init) {
    return (WriteOnlyQueryExpression) SModelUtil_new.instantiateConceptDeclaration("neo4j.cypher.structure.WriteOnlyQueryExpression", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static WriteOnlyQueryExpression newInstance(SModel sm) {
    return WriteOnlyQueryExpression.newInstance(sm, false);
  }
}
