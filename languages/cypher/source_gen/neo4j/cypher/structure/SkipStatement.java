package neo4j.cypher.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.baseLanguage.structure.Expression;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class SkipStatement extends BaseConcept {
  public static final String concept = "neo4j.cypher.structure.SkipStatement";
  public static final String SKIP_ITEMS = "skipItems";
  public static final String LIMIT_ITEMS = "limitItems";

  public SkipStatement(SNode node) {
    super(node);
  }

  public Expression getSkipItems() {
    return (Expression) this.getChild(Expression.class, SkipStatement.SKIP_ITEMS);
  }

  public void setSkipItems(Expression node) {
    super.setChild(SkipStatement.SKIP_ITEMS, node);
  }

  public Expression getLimitItems() {
    return (Expression) this.getChild(Expression.class, SkipStatement.LIMIT_ITEMS);
  }

  public void setLimitItems(Expression node) {
    super.setChild(SkipStatement.LIMIT_ITEMS, node);
  }

  public static SkipStatement newInstance(SModel sm, boolean init) {
    return (SkipStatement) SModelUtil_new.instantiateConceptDeclaration("neo4j.cypher.structure.SkipStatement", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static SkipStatement newInstance(SModel sm) {
    return SkipStatement.newInstance(sm, false);
  }
}
