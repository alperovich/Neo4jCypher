package neo4j.cypher.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import java.util.Iterator;
import java.util.List;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class MatchStatement extends CypherStatement {
  public static final String concept = "neo4j.cypher.structure.MatchStatement";
  public static final String PATH_EXPRESSION = "pathExpression";

  public MatchStatement(SNode node) {
    super(node);
  }

  public int getPathExpressionsCount() {
    return this.getChildCount(MatchStatement.PATH_EXPRESSION);
  }

  public Iterator<PathExpression> pathExpressions() {
    return this.children(PathExpression.class, MatchStatement.PATH_EXPRESSION);
  }

  public List<PathExpression> getPathExpressions() {
    return this.getChildren(PathExpression.class, MatchStatement.PATH_EXPRESSION);
  }

  public void addPathExpression(PathExpression node) {
    this.addChild(MatchStatement.PATH_EXPRESSION, node);
  }

  public void insertPathExpression(PathExpression prev, PathExpression node) {
    this.insertChild(prev, MatchStatement.PATH_EXPRESSION, node);
  }

  public static MatchStatement newInstance(SModel sm, boolean init) {
    return (MatchStatement) SModelUtil_new.instantiateConceptDeclaration("neo4j.cypher.structure.MatchStatement", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static MatchStatement newInstance(SModel sm) {
    return MatchStatement.newInstance(sm, false);
  }
}
