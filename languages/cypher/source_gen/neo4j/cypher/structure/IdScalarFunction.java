package neo4j.cypher.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class IdScalarFunction extends ScalarFunction {
  public static final String concept = "neo4j.cypher.structure.IdScalarFunction";
  public static final String PROPERTY_CONTAINER_REF = "propertyContainerRef";

  public IdScalarFunction(SNode node) {
    super(node);
  }

  public NamedPropertyContainerRef getPropertyContainerRef() {
    return (NamedPropertyContainerRef) this.getChild(NamedPropertyContainerRef.class, IdScalarFunction.PROPERTY_CONTAINER_REF);
  }

  public void setPropertyContainerRef(NamedPropertyContainerRef node) {
    super.setChild(IdScalarFunction.PROPERTY_CONTAINER_REF, node);
  }

  public static IdScalarFunction newInstance(SModel sm, boolean init) {
    return (IdScalarFunction) SModelUtil_new.instantiateConceptDeclaration("neo4j.cypher.structure.IdScalarFunction", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static IdScalarFunction newInstance(SModel sm) {
    return IdScalarFunction.newInstance(sm, false);
  }
}
