package neo4j.cypher.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import java.util.Map;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import java.util.HashMap;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.adapter.structure.concept.SConceptAdapterById;
import jetbrains.mps.smodel.adapter.structure.concept.SInterfaceConceptAdapterById;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;
import jetbrains.mps.smodel.SNodePointer;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  private final Map<SConceptId, Integer> myIndexMap = new HashMap<SConceptId, Integer>(171);
  /*package*/ final ConceptDescriptor myConceptAbsMathFunction = createDescriptorForAbsMathFunction();
  /*package*/ final ConceptDescriptor myConceptAggregateFunction = createDescriptorForAggregateFunction();
  /*package*/ final ConceptDescriptor myConceptAllExpression = createDescriptorForAllExpression();
  /*package*/ final ConceptDescriptor myConceptAllIndex = createDescriptorForAllIndex();
  /*package*/ final ConceptDescriptor myConceptAllPredicateFunction = createDescriptorForAllPredicateFunction();
  /*package*/ final ConceptDescriptor myConceptAllShortestPaths = createDescriptorForAllShortestPaths();
  /*package*/ final ConceptDescriptor myConceptAnyPredicateFunction = createDescriptorForAnyPredicateFunction();
  /*package*/ final ConceptDescriptor myConceptApStringLiteral = createDescriptorForApStringLiteral();
  /*package*/ final ConceptDescriptor myConceptAsExpression = createDescriptorForAsExpression();
  /*package*/ final ConceptDescriptor myConceptAscOrderBy = createDescriptorForAscOrderBy();
  /*package*/ final ConceptDescriptor myConceptAvgAggregate = createDescriptorForAvgAggregate();
  /*package*/ final ConceptDescriptor myConceptCoalesceScalarFunction = createDescriptorForCoalesceScalarFunction();
  /*package*/ final ConceptDescriptor myConceptCollectAggregate = createDescriptorForCollectAggregate();
  /*package*/ final ConceptDescriptor myConceptCollection = createDescriptorForCollection();
  /*package*/ final ConceptDescriptor myConceptCollectionFunction = createDescriptorForCollectionFunction();
  /*package*/ final ConceptDescriptor myConceptConnectionSheet = createDescriptorForConnectionSheet();
  /*package*/ final ConceptDescriptor myConceptConnectionStatement = createDescriptorForConnectionStatement();
  /*package*/ final ConceptDescriptor myConceptCountAggregate = createDescriptorForCountAggregate();
  /*package*/ final ConceptDescriptor myConceptCreateStatement = createDescriptorForCreateStatement();
  /*package*/ final ConceptDescriptor myConceptCypherAndExpression = createDescriptorForCypherAndExpression();
  /*package*/ final ConceptDescriptor myConceptCypherCollectionType = createDescriptorForCypherCollectionType();
  /*package*/ final ConceptDescriptor myConceptCypherDotExpression = createDescriptorForCypherDotExpression();
  /*package*/ final ConceptDescriptor myConceptCypherEqualsExpression = createDescriptorForCypherEqualsExpression();
  /*package*/ final ConceptDescriptor myConceptCypherIntegerConstant = createDescriptorForCypherIntegerConstant();
  /*package*/ final ConceptDescriptor myConceptCypherMinusExpression = createDescriptorForCypherMinusExpression();
  /*package*/ final ConceptDescriptor myConceptCypherMulExpression = createDescriptorForCypherMulExpression();
  /*package*/ final ConceptDescriptor myConceptCypherNodeType = createDescriptorForCypherNodeType();
  /*package*/ final ConceptDescriptor myConceptCypherNotEqualsExpression = createDescriptorForCypherNotEqualsExpression();
  /*package*/ final ConceptDescriptor myConceptCypherNotExpression = createDescriptorForCypherNotExpression();
  /*package*/ final ConceptDescriptor myConceptCypherOrExpression = createDescriptorForCypherOrExpression();
  /*package*/ final ConceptDescriptor myConceptCypherPathType = createDescriptorForCypherPathType();
  /*package*/ final ConceptDescriptor myConceptCypherPlusExpression = createDescriptorForCypherPlusExpression();
  /*package*/ final ConceptDescriptor myConceptCypherPropertyContainerType = createDescriptorForCypherPropertyContainerType();
  /*package*/ final ConceptDescriptor myConceptCypherQueryExecuteMethod = createDescriptorForCypherQueryExecuteMethod();
  /*package*/ final ConceptDescriptor myConceptCypherQueryStringType = createDescriptorForCypherQueryStringType();
  /*package*/ final ConceptDescriptor myConceptCypherQueryTupleType = createDescriptorForCypherQueryTupleType();
  /*package*/ final ConceptDescriptor myConceptCypherRelationshipType = createDescriptorForCypherRelationshipType();
  /*package*/ final ConceptDescriptor myConceptCypherRemExpression = createDescriptorForCypherRemExpression();
  /*package*/ final ConceptDescriptor myConceptCypherResultIteratorHasNextMethod = createDescriptorForCypherResultIteratorHasNextMethod();
  /*package*/ final ConceptDescriptor myConceptCypherResultIteratorMethod = createDescriptorForCypherResultIteratorMethod();
  /*package*/ final ConceptDescriptor myConceptCypherResultIteratorNextMethod = createDescriptorForCypherResultIteratorNextMethod();
  /*package*/ final ConceptDescriptor myConceptCypherResultIteratorTupleType = createDescriptorForCypherResultIteratorTupleType();
  /*package*/ final ConceptDescriptor myConceptCypherResultRowTupleType = createDescriptorForCypherResultRowTupleType();
  /*package*/ final ConceptDescriptor myConceptCypherResultTupleType = createDescriptorForCypherResultTupleType();
  /*package*/ final ConceptDescriptor myConceptCypherStatement = createDescriptorForCypherStatement();
  /*package*/ final ConceptDescriptor myConceptDeleteExpression = createDescriptorForDeleteExpression();
  /*package*/ final ConceptDescriptor myConceptDeleteStatement = createDescriptorForDeleteStatement();
  /*package*/ final ConceptDescriptor myConceptDescOrderBy = createDescriptorForDescOrderBy();
  /*package*/ final ConceptDescriptor myConceptDistinctExpression = createDescriptorForDistinctExpression();
  /*package*/ final ConceptDescriptor myConceptEmbeddedConnection = createDescriptorForEmbeddedConnection();
  /*package*/ final ConceptDescriptor myConceptEmptyConnectionStatement = createDescriptorForEmptyConnectionStatement();
  /*package*/ final ConceptDescriptor myConceptEmptyNode = createDescriptorForEmptyNode();
  /*package*/ final ConceptDescriptor myConceptExtractCollFunction = createDescriptorForExtractCollFunction();
  /*package*/ final ConceptDescriptor myConceptFilterCollFunction = createDescriptorForFilterCollFunction();
  /*package*/ final ConceptDescriptor myConceptFunction = createDescriptorForFunction();
  /*package*/ final ConceptDescriptor myConceptHeadScalarFunction = createDescriptorForHeadScalarFunction();
  /*package*/ final ConceptDescriptor myConceptICollectionExpression = createDescriptorForICollectionExpression();
  /*package*/ final ConceptDescriptor myConceptIConnectionStatement = createDescriptorForIConnectionStatement();
  /*package*/ final ConceptDescriptor myConceptICreateExpression = createDescriptorForICreateExpression();
  /*package*/ final ConceptDescriptor myConceptICypherExpression = createDescriptorForICypherExpression();
  /*package*/ final ConceptDescriptor myConceptICypherOperation = createDescriptorForICypherOperation();
  /*package*/ final ConceptDescriptor myConceptIDeleteExpression = createDescriptorForIDeleteExpression();
  /*package*/ final ConceptDescriptor myConceptIInnerMatchExpression = createDescriptorForIInnerMatchExpression();
  /*package*/ final ConceptDescriptor myConceptIMatchExpression = createDescriptorForIMatchExpression();
  /*package*/ final ConceptDescriptor myConceptINamedIdentifier = createDescriptorForINamedIdentifier();
  /*package*/ final ConceptDescriptor myConceptINamedNullableIdentifier = createDescriptorForINamedNullableIdentifier();
  /*package*/ final ConceptDescriptor myConceptIOrderByExpression = createDescriptorForIOrderByExpression();
  /*package*/ final ConceptDescriptor myConceptIOrderedExpression = createDescriptorForIOrderedExpression();
  /*package*/ final ConceptDescriptor myConceptIPropertyContainer = createDescriptorForIPropertyContainer();
  /*package*/ final ConceptDescriptor myConceptIQuerySheetStatement = createDescriptorForIQuerySheetStatement();
  /*package*/ final ConceptDescriptor myConceptIReturnExpression = createDescriptorForIReturnExpression();
  /*package*/ final ConceptDescriptor myConceptISetExpression = createDescriptorForISetExpression();
  /*package*/ final ConceptDescriptor myConceptIWhereExpression = createDescriptorForIWhereExpression();
  /*package*/ final ConceptDescriptor myConceptIWrite = createDescriptorForIWrite();
  /*package*/ final ConceptDescriptor myConceptIWriteStatement = createDescriptorForIWriteStatement();
  /*package*/ final ConceptDescriptor myConceptIdIndex = createDescriptorForIdIndex();
  /*package*/ final ConceptDescriptor myConceptIdScalarFunction = createDescriptorForIdScalarFunction();
  /*package*/ final ConceptDescriptor myConceptImpermanentConnection = createDescriptorForImpermanentConnection();
  /*package*/ final ConceptDescriptor myConceptIndex = createDescriptorForIndex();
  /*package*/ final ConceptDescriptor myConceptIndexedCypherResultRowMemberAccessExpression = createDescriptorForIndexedCypherResultRowMemberAccessExpression();
  /*package*/ final ConceptDescriptor myConceptKeyValueNodeIndex = createDescriptorForKeyValueNodeIndex();
  /*package*/ final ConceptDescriptor myConceptKeyValueRelationshipIndex = createDescriptorForKeyValueRelationshipIndex();
  /*package*/ final ConceptDescriptor myConceptLRRelationship = createDescriptorForLRRelationship();
  /*package*/ final ConceptDescriptor myConceptLTrimMStringFunction = createDescriptorForLTrimMStringFunction();
  /*package*/ final ConceptDescriptor myConceptLabelsCollFunction = createDescriptorForLabelsCollFunction();
  /*package*/ final ConceptDescriptor myConceptLastScalarFunction = createDescriptorForLastScalarFunction();
  /*package*/ final ConceptDescriptor myConceptLeftMStringFunction = createDescriptorForLeftMStringFunction();
  /*package*/ final ConceptDescriptor myConceptLengthScalarFunction = createDescriptorForLengthScalarFunction();
  /*package*/ final ConceptDescriptor myConceptLimitStatement = createDescriptorForLimitStatement();
  /*package*/ final ConceptDescriptor myConceptLowerMStringFunction = createDescriptorForLowerMStringFunction();
  /*package*/ final ConceptDescriptor myConceptLuceneIndex = createDescriptorForLuceneIndex();
  /*package*/ final ConceptDescriptor myConceptMatchStatement = createDescriptorForMatchStatement();
  /*package*/ final ConceptDescriptor myConceptMathFunction = createDescriptorForMathFunction();
  /*package*/ final ConceptDescriptor myConceptMaxAggregate = createDescriptorForMaxAggregate();
  /*package*/ final ConceptDescriptor myConceptMinAggregate = createDescriptorForMinAggregate();
  /*package*/ final ConceptDescriptor myConceptModifyStringFunction = createDescriptorForModifyStringFunction();
  /*package*/ final ConceptDescriptor myConceptNamedIndex = createDescriptorForNamedIndex();
  /*package*/ final ConceptDescriptor myConceptNamedNodeRef = createDescriptorForNamedNodeRef();
  /*package*/ final ConceptDescriptor myConceptNamedPathRef = createDescriptorForNamedPathRef();
  /*package*/ final ConceptDescriptor myConceptNamedPropertyContainerRef = createDescriptorForNamedPropertyContainerRef();
  /*package*/ final ConceptDescriptor myConceptNamedRelationshipRef = createDescriptorForNamedRelationshipRef();
  /*package*/ final ConceptDescriptor myConceptNeo4jExec = createDescriptorForNeo4jExec();
  /*package*/ final ConceptDescriptor myConceptNode = createDescriptorForNode();
  /*package*/ final ConceptDescriptor myConceptNodeType = createDescriptorForNodeType();
  /*package*/ final ConceptDescriptor myConceptNodesCollFunction = createDescriptorForNodesCollFunction();
  /*package*/ final ConceptDescriptor myConceptNonePredicateFunction = createDescriptorForNonePredicateFunction();
  /*package*/ final ConceptDescriptor myConceptOrderByExpression = createDescriptorForOrderByExpression();
  /*package*/ final ConceptDescriptor myConceptOrderByStatement = createDescriptorForOrderByStatement();
  /*package*/ final ConceptDescriptor myConceptParameter = createDescriptorForParameter();
  /*package*/ final ConceptDescriptor myConceptPathExpression = createDescriptorForPathExpression();
  /*package*/ final ConceptDescriptor myConceptPathFunction = createDescriptorForPathFunction();
  /*package*/ final ConceptDescriptor myConceptPercentileAggregateFunction = createDescriptorForPercentileAggregateFunction();
  /*package*/ final ConceptDescriptor myConceptPercentileContAggregate = createDescriptorForPercentileContAggregate();
  /*package*/ final ConceptDescriptor myConceptPercentileDiscAggregate = createDescriptorForPercentileDiscAggregate();
  /*package*/ final ConceptDescriptor myConceptPredicateExpression = createDescriptorForPredicateExpression();
  /*package*/ final ConceptDescriptor myConceptPredicateFunction = createDescriptorForPredicateFunction();
  /*package*/ final ConceptDescriptor myConceptProperty = createDescriptorForProperty();
  /*package*/ final ConceptDescriptor myConceptPropertyContainer = createDescriptorForPropertyContainer();
  /*package*/ final ConceptDescriptor myConceptPropertyOperation = createDescriptorForPropertyOperation();
  /*package*/ final ConceptDescriptor myConceptQueryEmptyStatement = createDescriptorForQueryEmptyStatement();
  /*package*/ final ConceptDescriptor myConceptQueryExpression = createDescriptorForQueryExpression();
  /*package*/ final ConceptDescriptor myConceptQuerySheet = createDescriptorForQuerySheet();
  /*package*/ final ConceptDescriptor myConceptQueryStringExpression = createDescriptorForQueryStringExpression();
  /*package*/ final ConceptDescriptor myConceptQueryStringStatement = createDescriptorForQueryStringStatement();
  /*package*/ final ConceptDescriptor myConceptQueryStringStatmentUntyped = createDescriptorForQueryStringStatmentUntyped();
  /*package*/ final ConceptDescriptor myConceptQueryStringVisualisationStatement = createDescriptorForQueryStringVisualisationStatement();
  /*package*/ final ConceptDescriptor myConceptQueryTupleExpression = createDescriptorForQueryTupleExpression();
  /*package*/ final ConceptDescriptor myConceptQueryTupleStatement = createDescriptorForQueryTupleStatement();
  /*package*/ final ConceptDescriptor myConceptRLRelationship = createDescriptorForRLRelationship();
  /*package*/ final ConceptDescriptor myConceptRTrimMStringFunction = createDescriptorForRTrimMStringFunction();
  /*package*/ final ConceptDescriptor myConceptRangeCollFunction = createDescriptorForRangeCollFunction();
  /*package*/ final ConceptDescriptor myConceptReadOnlyQueryExpression = createDescriptorForReadOnlyQueryExpression();
  /*package*/ final ConceptDescriptor myConceptReadOnlyQueryStringExpression = createDescriptorForReadOnlyQueryStringExpression();
  /*package*/ final ConceptDescriptor myConceptReadOnlyQueryTupleExpression = createDescriptorForReadOnlyQueryTupleExpression();
  /*package*/ final ConceptDescriptor myConceptReadWriteQueryExpression = createDescriptorForReadWriteQueryExpression();
  /*package*/ final ConceptDescriptor myConceptReadWriteQueryStringExpression = createDescriptorForReadWriteQueryStringExpression();
  /*package*/ final ConceptDescriptor myConceptReadWriteQueryTupleExpression = createDescriptorForReadWriteQueryTupleExpression();
  /*package*/ final ConceptDescriptor myConceptReduceCollFunction = createDescriptorForReduceCollFunction();
  /*package*/ final ConceptDescriptor myConceptRelationship = createDescriptorForRelationship();
  /*package*/ final ConceptDescriptor myConceptRelationshipType = createDescriptorForRelationshipType();
  /*package*/ final ConceptDescriptor myConceptRelationshipsCollFunction = createDescriptorForRelationshipsCollFunction();
  /*package*/ final ConceptDescriptor myConceptReplaceMStringFunction = createDescriptorForReplaceMStringFunction();
  /*package*/ final ConceptDescriptor myConceptReturnStatement = createDescriptorForReturnStatement();
  /*package*/ final ConceptDescriptor myConceptReturnStatementBlock = createDescriptorForReturnStatementBlock();
  /*package*/ final ConceptDescriptor myConceptRightMStringFunction = createDescriptorForRightMStringFunction();
  /*package*/ final ConceptDescriptor myConceptRoundMathFunction = createDescriptorForRoundMathFunction();
  /*package*/ final ConceptDescriptor myConceptScalarFunction = createDescriptorForScalarFunction();
  /*package*/ final ConceptDescriptor myConceptSetAssignmentStatement = createDescriptorForSetAssignmentStatement();
  /*package*/ final ConceptDescriptor myConceptSetStatement = createDescriptorForSetStatement();
  /*package*/ final ConceptDescriptor myConceptShortestPathFunction = createDescriptorForShortestPathFunction();
  /*package*/ final ConceptDescriptor myConceptSignMathFunction = createDescriptorForSignMathFunction();
  /*package*/ final ConceptDescriptor myConceptSinglePredicateFunction = createDescriptorForSinglePredicateFunction();
  /*package*/ final ConceptDescriptor myConceptSkipStatement = createDescriptorForSkipStatement();
  /*package*/ final ConceptDescriptor myConceptSqrtMathFunction = createDescriptorForSqrtMathFunction();
  /*package*/ final ConceptDescriptor myConceptStartAssignmentStatement = createDescriptorForStartAssignmentStatement();
  /*package*/ final ConceptDescriptor myConceptStartStatement = createDescriptorForStartStatement();
  /*package*/ final ConceptDescriptor myConceptStrStringFunction = createDescriptorForStrStringFunction();
  /*package*/ final ConceptDescriptor myConceptStringFunction = createDescriptorForStringFunction();
  /*package*/ final ConceptDescriptor myConceptSubstringMStringFunction = createDescriptorForSubstringMStringFunction();
  /*package*/ final ConceptDescriptor myConceptSumAggregate = createDescriptorForSumAggregate();
  /*package*/ final ConceptDescriptor myConceptTailCollFunction = createDescriptorForTailCollFunction();
  /*package*/ final ConceptDescriptor myConceptTimestampScalarFunction = createDescriptorForTimestampScalarFunction();
  /*package*/ final ConceptDescriptor myConceptTrimMStringFunction = createDescriptorForTrimMStringFunction();
  /*package*/ final ConceptDescriptor myConceptTypeScalarFunction = createDescriptorForTypeScalarFunction();
  /*package*/ final ConceptDescriptor myConceptUndirectedRelationship = createDescriptorForUndirectedRelationship();
  /*package*/ final ConceptDescriptor myConceptUpperMStringFunction = createDescriptorForUpperMStringFunction();
  /*package*/ final ConceptDescriptor myConceptWhereStatement = createDescriptorForWhereStatement();
  /*package*/ final ConceptDescriptor myConceptWithStatement = createDescriptorForWithStatement();
  /*package*/ final ConceptDescriptor myConceptWriteOnlyQueryExpression = createDescriptorForWriteOnlyQueryExpression();
  /*package*/ final ConceptDescriptor myConceptWriteOnlyQueryStringExpression = createDescriptorForWriteOnlyQueryStringExpression();
  /*package*/ final ConceptDescriptor myConceptWriteOnlyQueryTupleExpression = createDescriptorForWriteOnlyQueryTupleExpression();

  public StructureAspectDescriptor() {
    myIndexMap.put(myConceptAbsMathFunction.getId(), 0);
    myIndexMap.put(myConceptAggregateFunction.getId(), 1);
    myIndexMap.put(myConceptAllExpression.getId(), 2);
    myIndexMap.put(myConceptAllIndex.getId(), 3);
    myIndexMap.put(myConceptAllPredicateFunction.getId(), 4);
    myIndexMap.put(myConceptAllShortestPaths.getId(), 5);
    myIndexMap.put(myConceptAnyPredicateFunction.getId(), 6);
    myIndexMap.put(myConceptApStringLiteral.getId(), 7);
    myIndexMap.put(myConceptAsExpression.getId(), 8);
    myIndexMap.put(myConceptAscOrderBy.getId(), 9);
    myIndexMap.put(myConceptAvgAggregate.getId(), 10);
    myIndexMap.put(myConceptCoalesceScalarFunction.getId(), 11);
    myIndexMap.put(myConceptCollectAggregate.getId(), 12);
    myIndexMap.put(myConceptCollection.getId(), 13);
    myIndexMap.put(myConceptCollectionFunction.getId(), 14);
    myIndexMap.put(myConceptConnectionSheet.getId(), 15);
    myIndexMap.put(myConceptConnectionStatement.getId(), 16);
    myIndexMap.put(myConceptCountAggregate.getId(), 17);
    myIndexMap.put(myConceptCreateStatement.getId(), 18);
    myIndexMap.put(myConceptCypherAndExpression.getId(), 19);
    myIndexMap.put(myConceptCypherCollectionType.getId(), 20);
    myIndexMap.put(myConceptCypherDotExpression.getId(), 21);
    myIndexMap.put(myConceptCypherEqualsExpression.getId(), 22);
    myIndexMap.put(myConceptCypherIntegerConstant.getId(), 23);
    myIndexMap.put(myConceptCypherMinusExpression.getId(), 24);
    myIndexMap.put(myConceptCypherMulExpression.getId(), 25);
    myIndexMap.put(myConceptCypherNodeType.getId(), 26);
    myIndexMap.put(myConceptCypherNotEqualsExpression.getId(), 27);
    myIndexMap.put(myConceptCypherNotExpression.getId(), 28);
    myIndexMap.put(myConceptCypherOrExpression.getId(), 29);
    myIndexMap.put(myConceptCypherPathType.getId(), 30);
    myIndexMap.put(myConceptCypherPlusExpression.getId(), 31);
    myIndexMap.put(myConceptCypherPropertyContainerType.getId(), 32);
    myIndexMap.put(myConceptCypherQueryExecuteMethod.getId(), 33);
    myIndexMap.put(myConceptCypherQueryStringType.getId(), 34);
    myIndexMap.put(myConceptCypherQueryTupleType.getId(), 35);
    myIndexMap.put(myConceptCypherRelationshipType.getId(), 36);
    myIndexMap.put(myConceptCypherRemExpression.getId(), 37);
    myIndexMap.put(myConceptCypherResultIteratorHasNextMethod.getId(), 38);
    myIndexMap.put(myConceptCypherResultIteratorMethod.getId(), 39);
    myIndexMap.put(myConceptCypherResultIteratorNextMethod.getId(), 40);
    myIndexMap.put(myConceptCypherResultIteratorTupleType.getId(), 41);
    myIndexMap.put(myConceptCypherResultRowTupleType.getId(), 42);
    myIndexMap.put(myConceptCypherResultTupleType.getId(), 43);
    myIndexMap.put(myConceptCypherStatement.getId(), 44);
    myIndexMap.put(myConceptDeleteExpression.getId(), 45);
    myIndexMap.put(myConceptDeleteStatement.getId(), 46);
    myIndexMap.put(myConceptDescOrderBy.getId(), 47);
    myIndexMap.put(myConceptDistinctExpression.getId(), 48);
    myIndexMap.put(myConceptEmbeddedConnection.getId(), 49);
    myIndexMap.put(myConceptEmptyConnectionStatement.getId(), 50);
    myIndexMap.put(myConceptEmptyNode.getId(), 51);
    myIndexMap.put(myConceptExtractCollFunction.getId(), 52);
    myIndexMap.put(myConceptFilterCollFunction.getId(), 53);
    myIndexMap.put(myConceptFunction.getId(), 54);
    myIndexMap.put(myConceptHeadScalarFunction.getId(), 55);
    myIndexMap.put(myConceptICollectionExpression.getId(), 56);
    myIndexMap.put(myConceptIConnectionStatement.getId(), 57);
    myIndexMap.put(myConceptICreateExpression.getId(), 58);
    myIndexMap.put(myConceptICypherExpression.getId(), 59);
    myIndexMap.put(myConceptICypherOperation.getId(), 60);
    myIndexMap.put(myConceptIDeleteExpression.getId(), 61);
    myIndexMap.put(myConceptIInnerMatchExpression.getId(), 62);
    myIndexMap.put(myConceptIMatchExpression.getId(), 63);
    myIndexMap.put(myConceptINamedIdentifier.getId(), 64);
    myIndexMap.put(myConceptINamedNullableIdentifier.getId(), 65);
    myIndexMap.put(myConceptIOrderByExpression.getId(), 66);
    myIndexMap.put(myConceptIOrderedExpression.getId(), 67);
    myIndexMap.put(myConceptIPropertyContainer.getId(), 68);
    myIndexMap.put(myConceptIQuerySheetStatement.getId(), 69);
    myIndexMap.put(myConceptIReturnExpression.getId(), 70);
    myIndexMap.put(myConceptISetExpression.getId(), 71);
    myIndexMap.put(myConceptIWhereExpression.getId(), 72);
    myIndexMap.put(myConceptIWrite.getId(), 73);
    myIndexMap.put(myConceptIWriteStatement.getId(), 74);
    myIndexMap.put(myConceptIdIndex.getId(), 75);
    myIndexMap.put(myConceptIdScalarFunction.getId(), 76);
    myIndexMap.put(myConceptImpermanentConnection.getId(), 77);
    myIndexMap.put(myConceptIndex.getId(), 78);
    myIndexMap.put(myConceptIndexedCypherResultRowMemberAccessExpression.getId(), 79);
    myIndexMap.put(myConceptKeyValueNodeIndex.getId(), 80);
    myIndexMap.put(myConceptKeyValueRelationshipIndex.getId(), 81);
    myIndexMap.put(myConceptLRRelationship.getId(), 82);
    myIndexMap.put(myConceptLTrimMStringFunction.getId(), 83);
    myIndexMap.put(myConceptLabelsCollFunction.getId(), 84);
    myIndexMap.put(myConceptLastScalarFunction.getId(), 85);
    myIndexMap.put(myConceptLeftMStringFunction.getId(), 86);
    myIndexMap.put(myConceptLengthScalarFunction.getId(), 87);
    myIndexMap.put(myConceptLimitStatement.getId(), 88);
    myIndexMap.put(myConceptLowerMStringFunction.getId(), 89);
    myIndexMap.put(myConceptLuceneIndex.getId(), 90);
    myIndexMap.put(myConceptMatchStatement.getId(), 91);
    myIndexMap.put(myConceptMathFunction.getId(), 92);
    myIndexMap.put(myConceptMaxAggregate.getId(), 93);
    myIndexMap.put(myConceptMinAggregate.getId(), 94);
    myIndexMap.put(myConceptModifyStringFunction.getId(), 95);
    myIndexMap.put(myConceptNamedIndex.getId(), 96);
    myIndexMap.put(myConceptNamedNodeRef.getId(), 97);
    myIndexMap.put(myConceptNamedPathRef.getId(), 98);
    myIndexMap.put(myConceptNamedPropertyContainerRef.getId(), 99);
    myIndexMap.put(myConceptNamedRelationshipRef.getId(), 100);
    myIndexMap.put(myConceptNeo4jExec.getId(), 101);
    myIndexMap.put(myConceptNode.getId(), 102);
    myIndexMap.put(myConceptNodeType.getId(), 103);
    myIndexMap.put(myConceptNodesCollFunction.getId(), 104);
    myIndexMap.put(myConceptNonePredicateFunction.getId(), 105);
    myIndexMap.put(myConceptOrderByExpression.getId(), 106);
    myIndexMap.put(myConceptOrderByStatement.getId(), 107);
    myIndexMap.put(myConceptParameter.getId(), 108);
    myIndexMap.put(myConceptPathExpression.getId(), 109);
    myIndexMap.put(myConceptPathFunction.getId(), 110);
    myIndexMap.put(myConceptPercentileAggregateFunction.getId(), 111);
    myIndexMap.put(myConceptPercentileContAggregate.getId(), 112);
    myIndexMap.put(myConceptPercentileDiscAggregate.getId(), 113);
    myIndexMap.put(myConceptPredicateExpression.getId(), 114);
    myIndexMap.put(myConceptPredicateFunction.getId(), 115);
    myIndexMap.put(myConceptProperty.getId(), 116);
    myIndexMap.put(myConceptPropertyContainer.getId(), 117);
    myIndexMap.put(myConceptPropertyOperation.getId(), 118);
    myIndexMap.put(myConceptQueryEmptyStatement.getId(), 119);
    myIndexMap.put(myConceptQueryExpression.getId(), 120);
    myIndexMap.put(myConceptQuerySheet.getId(), 121);
    myIndexMap.put(myConceptQueryStringExpression.getId(), 122);
    myIndexMap.put(myConceptQueryStringStatement.getId(), 123);
    myIndexMap.put(myConceptQueryStringStatmentUntyped.getId(), 124);
    myIndexMap.put(myConceptQueryStringVisualisationStatement.getId(), 125);
    myIndexMap.put(myConceptQueryTupleExpression.getId(), 126);
    myIndexMap.put(myConceptQueryTupleStatement.getId(), 127);
    myIndexMap.put(myConceptRLRelationship.getId(), 128);
    myIndexMap.put(myConceptRTrimMStringFunction.getId(), 129);
    myIndexMap.put(myConceptRangeCollFunction.getId(), 130);
    myIndexMap.put(myConceptReadOnlyQueryExpression.getId(), 131);
    myIndexMap.put(myConceptReadOnlyQueryStringExpression.getId(), 132);
    myIndexMap.put(myConceptReadOnlyQueryTupleExpression.getId(), 133);
    myIndexMap.put(myConceptReadWriteQueryExpression.getId(), 134);
    myIndexMap.put(myConceptReadWriteQueryStringExpression.getId(), 135);
    myIndexMap.put(myConceptReadWriteQueryTupleExpression.getId(), 136);
    myIndexMap.put(myConceptReduceCollFunction.getId(), 137);
    myIndexMap.put(myConceptRelationship.getId(), 138);
    myIndexMap.put(myConceptRelationshipType.getId(), 139);
    myIndexMap.put(myConceptRelationshipsCollFunction.getId(), 140);
    myIndexMap.put(myConceptReplaceMStringFunction.getId(), 141);
    myIndexMap.put(myConceptReturnStatement.getId(), 142);
    myIndexMap.put(myConceptReturnStatementBlock.getId(), 143);
    myIndexMap.put(myConceptRightMStringFunction.getId(), 144);
    myIndexMap.put(myConceptRoundMathFunction.getId(), 145);
    myIndexMap.put(myConceptScalarFunction.getId(), 146);
    myIndexMap.put(myConceptSetAssignmentStatement.getId(), 147);
    myIndexMap.put(myConceptSetStatement.getId(), 148);
    myIndexMap.put(myConceptShortestPathFunction.getId(), 149);
    myIndexMap.put(myConceptSignMathFunction.getId(), 150);
    myIndexMap.put(myConceptSinglePredicateFunction.getId(), 151);
    myIndexMap.put(myConceptSkipStatement.getId(), 152);
    myIndexMap.put(myConceptSqrtMathFunction.getId(), 153);
    myIndexMap.put(myConceptStartAssignmentStatement.getId(), 154);
    myIndexMap.put(myConceptStartStatement.getId(), 155);
    myIndexMap.put(myConceptStrStringFunction.getId(), 156);
    myIndexMap.put(myConceptStringFunction.getId(), 157);
    myIndexMap.put(myConceptSubstringMStringFunction.getId(), 158);
    myIndexMap.put(myConceptSumAggregate.getId(), 159);
    myIndexMap.put(myConceptTailCollFunction.getId(), 160);
    myIndexMap.put(myConceptTimestampScalarFunction.getId(), 161);
    myIndexMap.put(myConceptTrimMStringFunction.getId(), 162);
    myIndexMap.put(myConceptTypeScalarFunction.getId(), 163);
    myIndexMap.put(myConceptUndirectedRelationship.getId(), 164);
    myIndexMap.put(myConceptUpperMStringFunction.getId(), 165);
    myIndexMap.put(myConceptWhereStatement.getId(), 166);
    myIndexMap.put(myConceptWithStatement.getId(), 167);
    myIndexMap.put(myConceptWriteOnlyQueryExpression.getId(), 168);
    myIndexMap.put(myConceptWriteOnlyQueryStringExpression.getId(), 169);
    myIndexMap.put(myConceptWriteOnlyQueryTupleExpression.getId(), 170);
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptAbsMathFunction, myConceptAggregateFunction, myConceptAllExpression, myConceptAllIndex, myConceptAllPredicateFunction, myConceptAllShortestPaths, myConceptAnyPredicateFunction, myConceptApStringLiteral, myConceptAsExpression, myConceptAscOrderBy, myConceptAvgAggregate, myConceptCoalesceScalarFunction, myConceptCollectAggregate, myConceptCollection, myConceptCollectionFunction, myConceptConnectionSheet, myConceptConnectionStatement, myConceptCountAggregate, myConceptCreateStatement, myConceptCypherAndExpression, myConceptCypherCollectionType, myConceptCypherDotExpression, myConceptCypherEqualsExpression, myConceptCypherIntegerConstant, myConceptCypherMinusExpression, myConceptCypherMulExpression, myConceptCypherNodeType, myConceptCypherNotEqualsExpression, myConceptCypherNotExpression, myConceptCypherOrExpression, myConceptCypherPathType, myConceptCypherPlusExpression, myConceptCypherPropertyContainerType, myConceptCypherQueryExecuteMethod, myConceptCypherQueryStringType, myConceptCypherQueryTupleType, myConceptCypherRelationshipType, myConceptCypherRemExpression, myConceptCypherResultIteratorHasNextMethod, myConceptCypherResultIteratorMethod, myConceptCypherResultIteratorNextMethod, myConceptCypherResultIteratorTupleType, myConceptCypherResultRowTupleType, myConceptCypherResultTupleType, myConceptCypherStatement, myConceptDeleteExpression, myConceptDeleteStatement, myConceptDescOrderBy, myConceptDistinctExpression, myConceptEmbeddedConnection, myConceptEmptyConnectionStatement, myConceptEmptyNode, myConceptExtractCollFunction, myConceptFilterCollFunction, myConceptFunction, myConceptHeadScalarFunction, myConceptICollectionExpression, myConceptIConnectionStatement, myConceptICreateExpression, myConceptICypherExpression, myConceptICypherOperation, myConceptIDeleteExpression, myConceptIInnerMatchExpression, myConceptIMatchExpression, myConceptINamedIdentifier, myConceptINamedNullableIdentifier, myConceptIOrderByExpression, myConceptIOrderedExpression, myConceptIPropertyContainer, myConceptIQuerySheetStatement, myConceptIReturnExpression, myConceptISetExpression, myConceptIWhereExpression, myConceptIWrite, myConceptIWriteStatement, myConceptIdIndex, myConceptIdScalarFunction, myConceptImpermanentConnection, myConceptIndex, myConceptIndexedCypherResultRowMemberAccessExpression, myConceptKeyValueNodeIndex, myConceptKeyValueRelationshipIndex, myConceptLRRelationship, myConceptLTrimMStringFunction, myConceptLabelsCollFunction, myConceptLastScalarFunction, myConceptLeftMStringFunction, myConceptLengthScalarFunction, myConceptLimitStatement, myConceptLowerMStringFunction, myConceptLuceneIndex, myConceptMatchStatement, myConceptMathFunction, myConceptMaxAggregate, myConceptMinAggregate, myConceptModifyStringFunction, myConceptNamedIndex, myConceptNamedNodeRef, myConceptNamedPathRef, myConceptNamedPropertyContainerRef, myConceptNamedRelationshipRef, myConceptNeo4jExec, myConceptNode, myConceptNodeType, myConceptNodesCollFunction, myConceptNonePredicateFunction, myConceptOrderByExpression, myConceptOrderByStatement, myConceptParameter, myConceptPathExpression, myConceptPathFunction, myConceptPercentileAggregateFunction, myConceptPercentileContAggregate, myConceptPercentileDiscAggregate, myConceptPredicateExpression, myConceptPredicateFunction, myConceptProperty, myConceptPropertyContainer, myConceptPropertyOperation, myConceptQueryEmptyStatement, myConceptQueryExpression, myConceptQuerySheet, myConceptQueryStringExpression, myConceptQueryStringStatement, myConceptQueryStringStatmentUntyped, myConceptQueryStringVisualisationStatement, myConceptQueryTupleExpression, myConceptQueryTupleStatement, myConceptRLRelationship, myConceptRTrimMStringFunction, myConceptRangeCollFunction, myConceptReadOnlyQueryExpression, myConceptReadOnlyQueryStringExpression, myConceptReadOnlyQueryTupleExpression, myConceptReadWriteQueryExpression, myConceptReadWriteQueryStringExpression, myConceptReadWriteQueryTupleExpression, myConceptReduceCollFunction, myConceptRelationship, myConceptRelationshipType, myConceptRelationshipsCollFunction, myConceptReplaceMStringFunction, myConceptReturnStatement, myConceptReturnStatementBlock, myConceptRightMStringFunction, myConceptRoundMathFunction, myConceptScalarFunction, myConceptSetAssignmentStatement, myConceptSetStatement, myConceptShortestPathFunction, myConceptSignMathFunction, myConceptSinglePredicateFunction, myConceptSkipStatement, myConceptSqrtMathFunction, myConceptStartAssignmentStatement, myConceptStartStatement, myConceptStrStringFunction, myConceptStringFunction, myConceptSubstringMStringFunction, myConceptSumAggregate, myConceptTailCollFunction, myConceptTimestampScalarFunction, myConceptTrimMStringFunction, myConceptTypeScalarFunction, myConceptUndirectedRelationship, myConceptUpperMStringFunction, myConceptWhereStatement, myConceptWithStatement, myConceptWriteOnlyQueryExpression, myConceptWriteOnlyQueryStringExpression, myConceptWriteOnlyQueryTupleExpression);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    Integer index = myIndexMap.get(id);
    if (index == null) {
      return null;
    }
    switch (((int) index)) {
      case 0:
        return myConceptAbsMathFunction;
      case 1:
        return myConceptAggregateFunction;
      case 2:
        return myConceptAllExpression;
      case 3:
        return myConceptAllIndex;
      case 4:
        return myConceptAllPredicateFunction;
      case 5:
        return myConceptAllShortestPaths;
      case 6:
        return myConceptAnyPredicateFunction;
      case 7:
        return myConceptApStringLiteral;
      case 8:
        return myConceptAsExpression;
      case 9:
        return myConceptAscOrderBy;
      case 10:
        return myConceptAvgAggregate;
      case 11:
        return myConceptCoalesceScalarFunction;
      case 12:
        return myConceptCollectAggregate;
      case 13:
        return myConceptCollection;
      case 14:
        return myConceptCollectionFunction;
      case 15:
        return myConceptConnectionSheet;
      case 16:
        return myConceptConnectionStatement;
      case 17:
        return myConceptCountAggregate;
      case 18:
        return myConceptCreateStatement;
      case 19:
        return myConceptCypherAndExpression;
      case 20:
        return myConceptCypherCollectionType;
      case 21:
        return myConceptCypherDotExpression;
      case 22:
        return myConceptCypherEqualsExpression;
      case 23:
        return myConceptCypherIntegerConstant;
      case 24:
        return myConceptCypherMinusExpression;
      case 25:
        return myConceptCypherMulExpression;
      case 26:
        return myConceptCypherNodeType;
      case 27:
        return myConceptCypherNotEqualsExpression;
      case 28:
        return myConceptCypherNotExpression;
      case 29:
        return myConceptCypherOrExpression;
      case 30:
        return myConceptCypherPathType;
      case 31:
        return myConceptCypherPlusExpression;
      case 32:
        return myConceptCypherPropertyContainerType;
      case 33:
        return myConceptCypherQueryExecuteMethod;
      case 34:
        return myConceptCypherQueryStringType;
      case 35:
        return myConceptCypherQueryTupleType;
      case 36:
        return myConceptCypherRelationshipType;
      case 37:
        return myConceptCypherRemExpression;
      case 38:
        return myConceptCypherResultIteratorHasNextMethod;
      case 39:
        return myConceptCypherResultIteratorMethod;
      case 40:
        return myConceptCypherResultIteratorNextMethod;
      case 41:
        return myConceptCypherResultIteratorTupleType;
      case 42:
        return myConceptCypherResultRowTupleType;
      case 43:
        return myConceptCypherResultTupleType;
      case 44:
        return myConceptCypherStatement;
      case 45:
        return myConceptDeleteExpression;
      case 46:
        return myConceptDeleteStatement;
      case 47:
        return myConceptDescOrderBy;
      case 48:
        return myConceptDistinctExpression;
      case 49:
        return myConceptEmbeddedConnection;
      case 50:
        return myConceptEmptyConnectionStatement;
      case 51:
        return myConceptEmptyNode;
      case 52:
        return myConceptExtractCollFunction;
      case 53:
        return myConceptFilterCollFunction;
      case 54:
        return myConceptFunction;
      case 55:
        return myConceptHeadScalarFunction;
      case 56:
        return myConceptICollectionExpression;
      case 57:
        return myConceptIConnectionStatement;
      case 58:
        return myConceptICreateExpression;
      case 59:
        return myConceptICypherExpression;
      case 60:
        return myConceptICypherOperation;
      case 61:
        return myConceptIDeleteExpression;
      case 62:
        return myConceptIInnerMatchExpression;
      case 63:
        return myConceptIMatchExpression;
      case 64:
        return myConceptINamedIdentifier;
      case 65:
        return myConceptINamedNullableIdentifier;
      case 66:
        return myConceptIOrderByExpression;
      case 67:
        return myConceptIOrderedExpression;
      case 68:
        return myConceptIPropertyContainer;
      case 69:
        return myConceptIQuerySheetStatement;
      case 70:
        return myConceptIReturnExpression;
      case 71:
        return myConceptISetExpression;
      case 72:
        return myConceptIWhereExpression;
      case 73:
        return myConceptIWrite;
      case 74:
        return myConceptIWriteStatement;
      case 75:
        return myConceptIdIndex;
      case 76:
        return myConceptIdScalarFunction;
      case 77:
        return myConceptImpermanentConnection;
      case 78:
        return myConceptIndex;
      case 79:
        return myConceptIndexedCypherResultRowMemberAccessExpression;
      case 80:
        return myConceptKeyValueNodeIndex;
      case 81:
        return myConceptKeyValueRelationshipIndex;
      case 82:
        return myConceptLRRelationship;
      case 83:
        return myConceptLTrimMStringFunction;
      case 84:
        return myConceptLabelsCollFunction;
      case 85:
        return myConceptLastScalarFunction;
      case 86:
        return myConceptLeftMStringFunction;
      case 87:
        return myConceptLengthScalarFunction;
      case 88:
        return myConceptLimitStatement;
      case 89:
        return myConceptLowerMStringFunction;
      case 90:
        return myConceptLuceneIndex;
      case 91:
        return myConceptMatchStatement;
      case 92:
        return myConceptMathFunction;
      case 93:
        return myConceptMaxAggregate;
      case 94:
        return myConceptMinAggregate;
      case 95:
        return myConceptModifyStringFunction;
      case 96:
        return myConceptNamedIndex;
      case 97:
        return myConceptNamedNodeRef;
      case 98:
        return myConceptNamedPathRef;
      case 99:
        return myConceptNamedPropertyContainerRef;
      case 100:
        return myConceptNamedRelationshipRef;
      case 101:
        return myConceptNeo4jExec;
      case 102:
        return myConceptNode;
      case 103:
        return myConceptNodeType;
      case 104:
        return myConceptNodesCollFunction;
      case 105:
        return myConceptNonePredicateFunction;
      case 106:
        return myConceptOrderByExpression;
      case 107:
        return myConceptOrderByStatement;
      case 108:
        return myConceptParameter;
      case 109:
        return myConceptPathExpression;
      case 110:
        return myConceptPathFunction;
      case 111:
        return myConceptPercentileAggregateFunction;
      case 112:
        return myConceptPercentileContAggregate;
      case 113:
        return myConceptPercentileDiscAggregate;
      case 114:
        return myConceptPredicateExpression;
      case 115:
        return myConceptPredicateFunction;
      case 116:
        return myConceptProperty;
      case 117:
        return myConceptPropertyContainer;
      case 118:
        return myConceptPropertyOperation;
      case 119:
        return myConceptQueryEmptyStatement;
      case 120:
        return myConceptQueryExpression;
      case 121:
        return myConceptQuerySheet;
      case 122:
        return myConceptQueryStringExpression;
      case 123:
        return myConceptQueryStringStatement;
      case 124:
        return myConceptQueryStringStatmentUntyped;
      case 125:
        return myConceptQueryStringVisualisationStatement;
      case 126:
        return myConceptQueryTupleExpression;
      case 127:
        return myConceptQueryTupleStatement;
      case 128:
        return myConceptRLRelationship;
      case 129:
        return myConceptRTrimMStringFunction;
      case 130:
        return myConceptRangeCollFunction;
      case 131:
        return myConceptReadOnlyQueryExpression;
      case 132:
        return myConceptReadOnlyQueryStringExpression;
      case 133:
        return myConceptReadOnlyQueryTupleExpression;
      case 134:
        return myConceptReadWriteQueryExpression;
      case 135:
        return myConceptReadWriteQueryStringExpression;
      case 136:
        return myConceptReadWriteQueryTupleExpression;
      case 137:
        return myConceptReduceCollFunction;
      case 138:
        return myConceptRelationship;
      case 139:
        return myConceptRelationshipType;
      case 140:
        return myConceptRelationshipsCollFunction;
      case 141:
        return myConceptReplaceMStringFunction;
      case 142:
        return myConceptReturnStatement;
      case 143:
        return myConceptReturnStatementBlock;
      case 144:
        return myConceptRightMStringFunction;
      case 145:
        return myConceptRoundMathFunction;
      case 146:
        return myConceptScalarFunction;
      case 147:
        return myConceptSetAssignmentStatement;
      case 148:
        return myConceptSetStatement;
      case 149:
        return myConceptShortestPathFunction;
      case 150:
        return myConceptSignMathFunction;
      case 151:
        return myConceptSinglePredicateFunction;
      case 152:
        return myConceptSkipStatement;
      case 153:
        return myConceptSqrtMathFunction;
      case 154:
        return myConceptStartAssignmentStatement;
      case 155:
        return myConceptStartStatement;
      case 156:
        return myConceptStrStringFunction;
      case 157:
        return myConceptStringFunction;
      case 158:
        return myConceptSubstringMStringFunction;
      case 159:
        return myConceptSumAggregate;
      case 160:
        return myConceptTailCollFunction;
      case 161:
        return myConceptTimestampScalarFunction;
      case 162:
        return myConceptTrimMStringFunction;
      case 163:
        return myConceptTypeScalarFunction;
      case 164:
        return myConceptUndirectedRelationship;
      case 165:
        return myConceptUpperMStringFunction;
      case 166:
        return myConceptWhereStatement;
      case 167:
        return myConceptWithStatement;
      case 168:
        return myConceptWriteOnlyQueryExpression;
      case 169:
        return myConceptWriteOnlyQueryStringExpression;
      case 170:
        return myConceptWriteOnlyQueryTupleExpression;
      default:
        throw new IllegalStateException();
    }
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    Integer res = null;
    if (c instanceof SConceptAdapterById) {
      res = myIndexMap.get(((SConceptAdapterById) c).getId());
    } else if (c instanceof SInterfaceConceptAdapterById) {
      res = myIndexMap.get(((SInterfaceConceptAdapterById) c).getId());
    }
    return (res == null ? -1 : res);
  }

  private static ConceptDescriptor createDescriptorForAbsMathFunction() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.AbsMathFunction", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x3528712027d43f1dL)).super_("neo4j.cypher.structure.MathFunction").version(1).super_(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x3528712027d43f1eL)).parents("neo4j.cypher.structure.MathFunction").parentIds(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x3528712027d43f1eL)).alias("abs", "").sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "3830435865999720221")).create();
  }
  private static ConceptDescriptor createDescriptorForAggregateFunction() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.AggregateFunction", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x2546b228cbcc89daL)).super_("neo4j.cypher.structure.Function").version(1).super_(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x3d018fbe2430770eL)).parents("neo4j.cypher.structure.Function").parentIds(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x3d018fbe2430770eL)).childDescriptors(new ConceptDescriptorBuilder.Link(0x4841a8f1042e06eeL, "expression", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false, new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "5206628397327714030"))).children(new String[]{"expression"}, new boolean[]{false}).abstract_().sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "2686030116060695002")).create();
  }
  private static ConceptDescriptor createDescriptorForAllExpression() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.AllExpression", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x3528712027d5662cL)).super_("jetbrains.mps.baseLanguage.structure.Expression").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).parents("jetbrains.mps.baseLanguage.structure.Expression", "neo4j.cypher.structure.ICypherExpression", "neo4j.cypher.structure.IReturnExpression").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x4cbf2dbb00e3a2beL), MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x4cbf2dbb00e33640L)).alias("*", "All expression for aggregate functions").sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "3830435865999795756")).create();
  }
  private static ConceptDescriptor createDescriptorForAllIndex() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.AllIndex", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x119ac58303bb83bcL)).super_("neo4j.cypher.structure.Index").version(1).super_(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x119ac58303bb837bL)).parents("neo4j.cypher.structure.Index").parentIds(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x119ac58303bb837bL)).alias("allindex", "").sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "1268543411552224188")).create();
  }
  private static ConceptDescriptor createDescriptorForAllPredicateFunction() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.AllPredicateFunction", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x4841a8f1042c9029L)).super_("neo4j.cypher.structure.PredicateFunction").version(1).super_(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x4841a8f1042c9027L)).parents("neo4j.cypher.structure.PredicateFunction").parentIds(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x4841a8f1042c9027L)).alias("all", "").sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "5206628397327618089")).create();
  }
  private static ConceptDescriptor createDescriptorForAllShortestPaths() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.AllShortestPaths", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x432a0a2a4da776dcL)).super_("neo4j.cypher.structure.PathFunction").version(1).super_(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x432a0a2a4da776d7L)).parents("neo4j.cypher.structure.PathFunction").parentIds(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x432a0a2a4da776d7L)).alias("allShortestPaths", "").sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "4839691926370744028")).create();
  }
  private static ConceptDescriptor createDescriptorForAnyPredicateFunction() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.AnyPredicateFunction", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x4841a8f1042c902fL)).super_("neo4j.cypher.structure.PredicateFunction").version(1).super_(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x4841a8f1042c9027L)).parents("neo4j.cypher.structure.PredicateFunction").parentIds(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x4841a8f1042c9027L)).alias("any", "").sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "5206628397327618095")).create();
  }
  private static ConceptDescriptor createDescriptorForApStringLiteral() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.ApStringLiteral", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x4841a8f1042432e2L)).super_("jetbrains.mps.baseLanguage.structure.Expression").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).parents("jetbrains.mps.baseLanguage.structure.Expression", "neo4j.cypher.structure.ICypherExpression").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x4cbf2dbb00e3a2beL)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(0x4841a8f10426c043L, "value", new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "5206628397327237187"))).properties("value").alias("'", "").sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "5206628397327069922")).create();
  }
  private static ConceptDescriptor createDescriptorForAsExpression() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.AsExpression", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x3528712027d4d5adL)).super_("jetbrains.mps.baseLanguage.structure.Expression").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).parents("jetbrains.mps.baseLanguage.structure.Expression", "neo4j.cypher.structure.ICypherExpression", "neo4j.cypher.structure.IReturnExpression", "neo4j.cypher.structure.INamedIdentifier").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x4cbf2dbb00e3a2beL), MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x4cbf2dbb00e33640L), MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x4841a8f104282c68L)).childDescriptors(new ConceptDescriptorBuilder.Link(0x3528712027d4d5afL, "expression", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false, new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "3830435865999758767"))).children(new String[]{"expression"}, new boolean[]{false}).alias("as", "").sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "3830435865999758765")).create();
  }
  private static ConceptDescriptor createDescriptorForAscOrderBy() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.AscOrderBy", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x6607a8a1c5b01e59L)).super_("neo4j.cypher.structure.OrderByExpression").version(1).super_(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x3d018fbe24314ff0L)).parents("neo4j.cypher.structure.OrderByExpression").parentIds(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x3d018fbe24314ff0L)).alias("asc", "").sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "7352030329465478745")).create();
  }
  private static ConceptDescriptor createDescriptorForAvgAggregate() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.AvgAggregate", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x432a0a2a4d9fc5b9L)).super_("neo4j.cypher.structure.AggregateFunction").version(1).super_(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x2546b228cbcc89daL)).parents("neo4j.cypher.structure.AggregateFunction").parentIds(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x2546b228cbcc89daL)).alias("agv", "").sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "4839691926370239929")).create();
  }
  private static ConceptDescriptor createDescriptorForCoalesceScalarFunction() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.CoalesceScalarFunction", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x6de5edabd1c133e4L)).super_("neo4j.cypher.structure.ScalarFunction").version(1).super_(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x6de5edabd1bff138L)).parents("neo4j.cypher.structure.ScalarFunction").parentIds(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x6de5edabd1bff138L)).childDescriptors(new ConceptDescriptorBuilder.Link(0x6de5edabd1c133e6L, "expressions", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, true, false, new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "7918996842015175654"))).children(new String[]{"expressions"}, new boolean[]{true}).alias("coalesce", "Returns the first non-null value in the list of expressions passed to it").sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "7918996842015175652")).create();
  }
  private static ConceptDescriptor createDescriptorForCollectAggregate() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.CollectAggregate", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x432a0a2a4d9fc5bbL)).super_("neo4j.cypher.structure.AggregateFunction").version(1).super_(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x2546b228cbcc89daL)).parents("neo4j.cypher.structure.AggregateFunction").parentIds(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x2546b228cbcc89daL)).alias("collect", "Collection from the values").sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "4839691926370239931")).create();
  }
  private static ConceptDescriptor createDescriptorForCollection() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.Collection", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x4841a8f1042c0fbfL)).super_("jetbrains.mps.baseLanguage.structure.Expression").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).parents("jetbrains.mps.baseLanguage.structure.Expression", "neo4j.cypher.structure.IReturnExpression", "neo4j.cypher.structure.ICollectionExpression").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x4cbf2dbb00e33640L), MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x4841a8f1042cf215L)).childDescriptors(new ConceptDescriptorBuilder.Link(0x4841a8f1042c0fc1L, "expression", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), true, true, false, new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "5206628397327585217"))).children(new String[]{"expression"}, new boolean[]{true}).alias("[", "").sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "5206628397327585215")).create();
  }
  private static ConceptDescriptor createDescriptorForCollectionFunction() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.CollectionFunction", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x3528712027d3fd22L)).super_("neo4j.cypher.structure.Function").version(1).super_(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x3d018fbe2430770eL)).parents("neo4j.cypher.structure.Function", "neo4j.cypher.structure.ICollectionExpression").parentIds(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x3d018fbe2430770eL), MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x4841a8f1042cf215L)).abstract_().sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "3830435865999703330")).create();
  }
  private static ConceptDescriptor createDescriptorForConnectionSheet() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.ConnectionSheet", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x3d018fbe2431a79cL)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L)).childDescriptors(new ConceptDescriptorBuilder.Link(0x3d018fbe2431a7a2L, "statement", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x3d018fbe2431d79eL), true, true, false, new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "4395952758104106914"))).children(new String[]{"statement"}, new boolean[]{true}).rootable().sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "4395952758104106908")).create();
  }
  private static ConceptDescriptor createDescriptorForConnectionStatement() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.ConnectionStatement", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x3d018fbe2431a79dL)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept", "neo4j.cypher.structure.IConnectionStatement").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L), MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x3d018fbe2431d79eL)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(0x3d018fbe2431a79fL, "active", new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "4395952758104106911"))).properties("active").abstract_().sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "4395952758104106909")).create();
  }
  private static ConceptDescriptor createDescriptorForCountAggregate() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.CountAggregate", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x6607a8a1c5b40169L)).super_("neo4j.cypher.structure.AggregateFunction").version(1).super_(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x2546b228cbcc89daL)).parents("neo4j.cypher.structure.AggregateFunction").parentIds(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x2546b228cbcc89daL)).alias("count", "").sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "7352030329465733481")).create();
  }
  private static ConceptDescriptor createDescriptorForCreateStatement() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.CreateStatement", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x3528712027d600d9L)).super_("neo4j.cypher.structure.CypherStatement").version(1).super_(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x4cbf2dbb00e54a8bL)).parents("neo4j.cypher.structure.CypherStatement", "neo4j.cypher.structure.IWriteStatement").parentIds(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x4cbf2dbb00e54a8bL), MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x2376f01d7fbd1fa3L)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(0x40ea72fa23e75f20L, "unique", new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "4677677581647437600"))).properties("unique").childDescriptors(new ConceptDescriptorBuilder.Link(0x40ea72fa23eae259L, "pathExpression", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x432a0a2a4da444f2L), false, true, false, new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "4677677581647667801"))).children(new String[]{"pathExpression"}, new boolean[]{true}).alias("create", "").sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "3830435865999835353")).create();
  }
  private static ConceptDescriptor createDescriptorForCypherAndExpression() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.CypherAndExpression", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x4841a8f104307f52L)).super_("jetbrains.mps.baseLanguage.structure.AndExpression").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xfb7c3070eeL)).parents("jetbrains.mps.baseLanguage.structure.AndExpression", "neo4j.cypher.structure.ICypherOperation", "neo4j.cypher.structure.IWhereExpression", "neo4j.cypher.structure.IReturnExpression").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xfb7c3070eeL), MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x596290ff75fe29faL), MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x4841a8f1042e548dL), MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x4cbf2dbb00e33640L)).alias("and", "").sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "5206628397327875922")).create();
  }
  private static ConceptDescriptor createDescriptorForCypherCollectionType() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.CypherCollectionType", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x3d300249aae483afL)).super_("jetbrains.mps.baseLanguage.structure.Type").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL)).parents("jetbrains.mps.baseLanguage.structure.Type").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL)).alias("cyphercollection", "cypher collection type").sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "4409026550618686383")).create();
  }
  private static ConceptDescriptor createDescriptorForCypherDotExpression() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.CypherDotExpression", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x4cbf2dbb00e40afbL)).super_("jetbrains.mps.baseLanguage.structure.DotExpression").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x116b46a08c4L)).parents("jetbrains.mps.baseLanguage.structure.DotExpression", "neo4j.cypher.structure.ICypherExpression", "neo4j.cypher.structure.IReturnExpression").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x116b46a08c4L), MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x4cbf2dbb00e3a2beL), MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x4cbf2dbb00e33640L)).sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "5530189148631337723")).create();
  }
  private static ConceptDescriptor createDescriptorForCypherEqualsExpression() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.CypherEqualsExpression", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x4841a8f1043068f8L)).super_("jetbrains.mps.baseLanguage.structure.EqualsExpression").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b210L)).parents("jetbrains.mps.baseLanguage.structure.EqualsExpression", "neo4j.cypher.structure.ICypherOperation", "neo4j.cypher.structure.IWhereExpression", "neo4j.cypher.structure.IReturnExpression").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b210L), MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x596290ff75fe29faL), MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x4841a8f1042e548dL), MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x4cbf2dbb00e33640L)).alias("=", "").sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "5206628397327870200")).create();
  }
  private static ConceptDescriptor createDescriptorForCypherIntegerConstant() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.CypherIntegerConstant", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x12636aedaa51802cL)).super_("jetbrains.mps.baseLanguage.structure.IntegerLiteral").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x1129778b846L)).parents("jetbrains.mps.baseLanguage.structure.IntegerLiteral", "neo4j.cypher.structure.ICypherExpression", "jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x1129778b846L), MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x4cbf2dbb00e3a2beL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x19796fa16a19888bL)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(0xf8cc59b315L, "value", new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "1068580320021"))).properties("value").alias("integer constant1", "integer constant").sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "1325020284374319148")).create();
  }
  private static ConceptDescriptor createDescriptorForCypherMinusExpression() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.CypherMinusExpression", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x41870286b4384f3bL)).super_("jetbrains.mps.baseLanguage.structure.MinusExpression").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc67c7f5L)).parents("jetbrains.mps.baseLanguage.structure.MinusExpression", "neo4j.cypher.structure.ICypherOperation").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc67c7f5L), MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x596290ff75fe29faL)).alias("-", "").sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "4721745511893716795")).create();
  }
  private static ConceptDescriptor createDescriptorForCypherMulExpression() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.CypherMulExpression", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x41870286b439172bL)).super_("jetbrains.mps.baseLanguage.structure.MulExpression").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xfe476b758fL)).parents("jetbrains.mps.baseLanguage.structure.MulExpression", "neo4j.cypher.structure.ICypherOperation").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xfe476b758fL), MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x596290ff75fe29faL)).alias("*", "multiplication operation").sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "4721745511893767979")).create();
  }
  private static ConceptDescriptor createDescriptorForCypherNodeType() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.CypherNodeType", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x50477d247907df48L)).super_("neo4j.cypher.structure.CypherPropertyContainerType").version(1).super_(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x1381ca8dfd0fe0b2L)).parents("neo4j.cypher.structure.CypherPropertyContainerType").parentIds(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x1381ca8dfd0fe0b2L)).alias("cyphernode", "").sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "5784729841983545160")).create();
  }
  private static ConceptDescriptor createDescriptorForCypherNotEqualsExpression() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.CypherNotEqualsExpression", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x4841a8f104315f07L)).super_("jetbrains.mps.baseLanguage.structure.NotEqualsExpression").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf9e20e303fL)).parents("jetbrains.mps.baseLanguage.structure.NotEqualsExpression", "neo4j.cypher.structure.ICypherOperation", "neo4j.cypher.structure.IWhereExpression", "neo4j.cypher.structure.IReturnExpression").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf9e20e303fL), MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x596290ff75fe29faL), MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x4841a8f1042e548dL), MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x4cbf2dbb00e33640L)).alias("<>", "").sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "5206628397327933191")).create();
  }
  private static ConceptDescriptor createDescriptorForCypherNotExpression() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.CypherNotExpression", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x4841a8f104307f65L)).super_("jetbrains.mps.baseLanguage.structure.NotExpression").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xfbcf6bd10dL)).parents("jetbrains.mps.baseLanguage.structure.NotExpression", "neo4j.cypher.structure.ICypherOperation", "neo4j.cypher.structure.IWhereExpression", "neo4j.cypher.structure.IReturnExpression").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xfbcf6bd10dL), MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x596290ff75fe29faL), MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x4841a8f1042e548dL), MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x4cbf2dbb00e33640L)).alias("not", "").sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "5206628397327875941")).create();
  }
  private static ConceptDescriptor createDescriptorForCypherOrExpression() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.CypherOrExpression", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x4841a8f104307f56L)).super_("jetbrains.mps.baseLanguage.structure.OrExpression").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xfb8255689fL)).parents("jetbrains.mps.baseLanguage.structure.OrExpression", "neo4j.cypher.structure.ICypherOperation", "neo4j.cypher.structure.IWhereExpression", "neo4j.cypher.structure.IReturnExpression").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xfb8255689fL), MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x596290ff75fe29faL), MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x4841a8f1042e548dL), MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x4cbf2dbb00e33640L)).alias("or", "").sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "5206628397327875926")).create();
  }
  private static ConceptDescriptor createDescriptorForCypherPathType() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.CypherPathType", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x50477d247906437eL)).super_("jetbrains.mps.baseLanguage.structure.Type").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL)).parents("jetbrains.mps.baseLanguage.structure.Type").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL)).alias("cypherpath", "").sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "5784729841983439742")).create();
  }
  private static ConceptDescriptor createDescriptorForCypherPlusExpression() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.CypherPlusExpression", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x12636aedaa50b941L)).super_("jetbrains.mps.baseLanguage.structure.PlusExpression").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc67c7fbL)).parents("jetbrains.mps.baseLanguage.structure.PlusExpression", "neo4j.cypher.structure.ICypherOperation").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc67c7fbL), MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x596290ff75fe29faL)).alias("+", "").sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "1325020284374268225")).create();
  }
  private static ConceptDescriptor createDescriptorForCypherPropertyContainerType() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.CypherPropertyContainerType", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x1381ca8dfd0fe0b2L)).super_("jetbrains.mps.baseLanguage.structure.Type").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL)).parents("jetbrains.mps.baseLanguage.structure.Type").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL)).alias("cypherpropertycontainertype", "").sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "1405627269901181106")).create();
  }
  private static ConceptDescriptor createDescriptorForCypherQueryExecuteMethod() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.CypherQueryExecuteMethod", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x3340f286fb406a31L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.baseLanguage.structure.IOperation").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x116b46ac030L)).alias("execute()", "").sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "3693218355998648881")).create();
  }
  private static ConceptDescriptor createDescriptorForCypherQueryStringType() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.CypherQueryStringType", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x36087ce47f5b9b0eL)).super_("jetbrains.mps.baseLanguage.structure.Type").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL)).parents("jetbrains.mps.baseLanguage.structure.Type").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL)).childDescriptors(new ConceptDescriptorBuilder.Link(0x36087ce47f5b9b0fL, "stringType", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11d47da71ecL), false, false, false, new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "3893499198692891407"))).children(new String[]{"stringType"}, new boolean[]{false}).alias("cypherStringTupleType", "").sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "3893499198692891406")).create();
  }
  private static ConceptDescriptor createDescriptorForCypherQueryTupleType() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.CypherQueryTupleType", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x52178e892162ba1aL)).super_("jetbrains.mps.baseLanguage.structure.Type").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL)).parents("jetbrains.mps.baseLanguage.structure.Type").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL)).childDescriptors(new ConceptDescriptorBuilder.Link(0x52178e892162ba1dL, "tupleType", MetaIdFactory.conceptId(0xa247e09e243545baL, 0xb8d207e93feba96aL, 0x1207157a8dcL), false, false, false, new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "5915353355196217885"))).children(new String[]{"tupleType"}, new boolean[]{false}).alias("cypherQueryTupleType", "").sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "5915353355196217882")).create();
  }
  private static ConceptDescriptor createDescriptorForCypherRelationshipType() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.CypherRelationshipType", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x50477d247907df47L)).super_("neo4j.cypher.structure.CypherPropertyContainerType").version(1).super_(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x1381ca8dfd0fe0b2L)).parents("neo4j.cypher.structure.CypherPropertyContainerType").parentIds(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x1381ca8dfd0fe0b2L)).alias("cypherrelationship", "").sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "5784729841983545159")).create();
  }
  private static ConceptDescriptor createDescriptorForCypherRemExpression() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.CypherRemExpression", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x41870286b4391732L)).super_("jetbrains.mps.baseLanguage.structure.RemExpression").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10c8d509af4L)).parents("jetbrains.mps.baseLanguage.structure.RemExpression", "neo4j.cypher.structure.ICypherOperation").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10c8d509af4L), MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x596290ff75fe29faL)).alias("%", "remainder operation").sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "4721745511893767986")).create();
  }
  private static ConceptDescriptor createDescriptorForCypherResultIteratorHasNextMethod() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.CypherResultIteratorHasNextMethod", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x1af46b20b0458d7eL)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.baseLanguage.structure.IOperation").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x116b46ac030L)).alias("hasNext()", "").sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "1942295127444000126")).create();
  }
  private static ConceptDescriptor createDescriptorForCypherResultIteratorMethod() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.CypherResultIteratorMethod", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x1af46b20b02c7309L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.baseLanguage.structure.IOperation").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x116b46ac030L)).alias("iterator", "").sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "1942295127442354953")).create();
  }
  private static ConceptDescriptor createDescriptorForCypherResultIteratorNextMethod() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.CypherResultIteratorNextMethod", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x1af46b20b0587485L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.baseLanguage.structure.IOperation").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x116b46ac030L)).alias("next()", "").sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "1942295127445238917")).create();
  }
  private static ConceptDescriptor createDescriptorForCypherResultIteratorTupleType() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.CypherResultIteratorTupleType", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x1af46b20b02ee751L)).super_("jetbrains.mps.baseLanguage.structure.Type").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL)).parents("jetbrains.mps.baseLanguage.structure.Type").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL)).childDescriptors(new ConceptDescriptorBuilder.Link(0x1af46b20b02ee757L, "tupleType", MetaIdFactory.conceptId(0xa247e09e243545baL, 0xb8d207e93feba96aL, 0x1207157a8dcL), false, false, false, new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "1942295127442515799"))).children(new String[]{"tupleType"}, new boolean[]{false}).alias("cypherResultIteratorTupleType", "").sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "1942295127442515793")).create();
  }
  private static ConceptDescriptor createDescriptorForCypherResultRowTupleType() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.CypherResultRowTupleType", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x1af46b20b0585cf2L)).super_("jetbrains.mps.baseLanguage.structure.Type").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL)).parents("jetbrains.mps.baseLanguage.structure.Type").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL)).childDescriptors(new ConceptDescriptorBuilder.Link(0x1af46b20b0587f0eL, "tupleType", MetaIdFactory.conceptId(0xa247e09e243545baL, 0xb8d207e93feba96aL, 0x1207157a8dcL), false, false, false, new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "1942295127445241614"))).children(new String[]{"tupleType"}, new boolean[]{false}).alias("cypherResultRowTupleType", "").sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "1942295127445232882")).create();
  }
  private static ConceptDescriptor createDescriptorForCypherResultTupleType() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.CypherResultTupleType", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x3340f286fb2bc7faL)).super_("jetbrains.mps.baseLanguage.structure.Type").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL)).parents("jetbrains.mps.baseLanguage.structure.Type").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL)).childDescriptors(new ConceptDescriptorBuilder.Link(0x3340f286fb2bc98aL, "tupleType", MetaIdFactory.conceptId(0xa247e09e243545baL, 0xb8d207e93feba96aL, 0x1207157a8dcL), false, false, false, new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "3693218355997297034"))).children(new String[]{"tupleType"}, new boolean[]{false}).alias("cypherResultTupleType", "").sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "3693218355997296634")).create();
  }
  private static ConceptDescriptor createDescriptorForCypherStatement() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.CypherStatement", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x4cbf2dbb00e54a8bL)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).abstract_().sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "5530189148631419531")).create();
  }
  private static ConceptDescriptor createDescriptorForDeleteExpression() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.DeleteExpression", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x7a3bb6c9eea6c006L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "neo4j.cypher.structure.IDeleteExpression", "neo4j.cypher.structure.IOrderedExpression").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0xaaeb60067615aa4L), MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x7a3bb6c9eea6c001L)).childDescriptors(new ConceptDescriptorBuilder.Link(0x7a3bb6c9eea767f4L, "expression", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false, new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "8807834474661767156"))).children(new String[]{"expression"}, new boolean[]{false}).sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "8807834474661724166")).create();
  }
  private static ConceptDescriptor createDescriptorForDeleteStatement() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.DeleteStatement", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x3528712027d6010bL)).super_("neo4j.cypher.structure.CypherStatement").version(1).super_(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x4cbf2dbb00e54a8bL)).parents("neo4j.cypher.structure.CypherStatement", "neo4j.cypher.structure.IWriteStatement").parentIds(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x4cbf2dbb00e54a8bL), MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x2376f01d7fbd1fa3L)).childDescriptors(new ConceptDescriptorBuilder.Link(0x3528712027d6010cL, "expression", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x7a3bb6c9eea6c006L), false, true, false, new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "3830435865999835404"))).children(new String[]{"expression"}, new boolean[]{true}).alias("delete", "").sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "3830435865999835403")).create();
  }
  private static ConceptDescriptor createDescriptorForDescOrderBy() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.DescOrderBy", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x6607a8a1c5b01e63L)).super_("neo4j.cypher.structure.OrderByExpression").version(1).super_(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x3d018fbe24314ff0L)).parents("neo4j.cypher.structure.OrderByExpression").parentIds(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x3d018fbe24314ff0L)).alias("desc", "").sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "7352030329465478755")).create();
  }
  private static ConceptDescriptor createDescriptorForDistinctExpression() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.DistinctExpression", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x3d018fbe24317afdL)).super_("jetbrains.mps.baseLanguage.structure.Expression").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).parents("jetbrains.mps.baseLanguage.structure.Expression", "neo4j.cypher.structure.ICypherExpression", "neo4j.cypher.structure.IReturnExpression").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x4cbf2dbb00e3a2beL), MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x4cbf2dbb00e33640L)).childDescriptors(new ConceptDescriptorBuilder.Link(0x3d018fbe2431a793L, "expression", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false, new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "4395952758104106899"))).children(new String[]{"expression"}, new boolean[]{false}).alias("distinct", "").sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "4395952758104095485")).create();
  }
  private static ConceptDescriptor createDescriptorForEmbeddedConnection() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.EmbeddedConnection", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x6f4f64f8bdf7e2fdL)).super_("neo4j.cypher.structure.ConnectionStatement").version(1).super_(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x3d018fbe2431a79dL)).parents("neo4j.cypher.structure.ConnectionStatement").parentIds(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x3d018fbe2431a79dL)).sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "8020740480871949053")).create();
  }
  private static ConceptDescriptor createDescriptorForEmptyConnectionStatement() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.EmptyConnectionStatement", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x3d018fbe2431a7b5L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "neo4j.cypher.structure.IConnectionStatement").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x3d018fbe2431d79eL)).sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "4395952758104106933")).create();
  }
  private static ConceptDescriptor createDescriptorForEmptyNode() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.EmptyNode", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x3d300249aaeec6c6L)).super_("neo4j.cypher.structure.Node").version(1).super_(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x119ac58303ba8e11L)).parents("neo4j.cypher.structure.Node").parentIds(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x119ac58303ba8e11L)).alias("()", "").sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "4409026550619358918")).create();
  }
  private static ConceptDescriptor createDescriptorForExtractCollFunction() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.ExtractCollFunction", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x44ca2c77377271dL)).super_("neo4j.cypher.structure.CollectionFunction").version(1).super_(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x3528712027d3fd22L)).parents("neo4j.cypher.structure.CollectionFunction").parentIds(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x3528712027d3fd22L)).childDescriptors(new ConceptDescriptorBuilder.Link(0x6de5edabd1c1659aL, "expression", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false, new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "7918996842015188378"))).children(new String[]{"expression"}, new boolean[]{false}).alias("extract", "").sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "309801451901101853")).create();
  }
  private static ConceptDescriptor createDescriptorForFilterCollFunction() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.FilterCollFunction", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x6de5edabd1bff13aL)).super_("neo4j.cypher.structure.CollectionFunction").version(1).super_(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x3528712027d3fd22L)).parents("neo4j.cypher.structure.CollectionFunction").parentIds(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x3528712027d3fd22L)).sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "7918996842015093050")).create();
  }
  private static ConceptDescriptor createDescriptorForFunction() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.Function", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x3d018fbe2430770eL)).super_("jetbrains.mps.baseLanguage.structure.Expression").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).parents("jetbrains.mps.baseLanguage.structure.Expression", "neo4j.cypher.structure.ICypherExpression", "neo4j.cypher.structure.IReturnExpression").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x4cbf2dbb00e3a2beL), MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x4cbf2dbb00e33640L)).abstract_().sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "4395952758104028942")).create();
  }
  private static ConceptDescriptor createDescriptorForHeadScalarFunction() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.HeadScalarFunction", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x3528712027d3fd21L)).super_("neo4j.cypher.structure.ScalarFunction").version(1).super_(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x6de5edabd1bff138L)).parents("neo4j.cypher.structure.ScalarFunction").parentIds(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x6de5edabd1bff138L)).childDescriptors(new ConceptDescriptorBuilder.Link(0x3528712027d43f29L, "expression", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false, new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "3830435865999720233"))).children(new String[]{"expression"}, new boolean[]{false}).alias("head", "").sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "3830435865999703329")).create();
  }
  private static ConceptDescriptor createDescriptorForICollectionExpression() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.ICollectionExpression", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x4841a8f1042cf215L)).version(1).interface_().sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "5206628397327643157")).create();
  }
  private static ConceptDescriptor createDescriptorForIConnectionStatement() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.IConnectionStatement", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x3d018fbe2431d79eL)).version(1).interface_().sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "4395952758104119198")).create();
  }
  private static ConceptDescriptor createDescriptorForICreateExpression() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.ICreateExpression", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x40ea72fa23eb985dL)).version(1).interface_().sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "4677677581647714397")).create();
  }
  private static ConceptDescriptor createDescriptorForICypherExpression() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.ICypherExpression", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x4cbf2dbb00e3a2beL)).version(1).interface_().sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "5530189148631311038")).create();
  }
  private static ConceptDescriptor createDescriptorForICypherOperation() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.ICypherOperation", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x596290ff75fe29faL)).version(1).interface_().parents("neo4j.cypher.structure.ICypherExpression").parentIds(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x4cbf2dbb00e3a2beL)).sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "6440869843963881978")).create();
  }
  private static ConceptDescriptor createDescriptorForIDeleteExpression() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.IDeleteExpression", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0xaaeb60067615aa4L)).version(1).interface_().sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "769752699177622180")).create();
  }
  private static ConceptDescriptor createDescriptorForIInnerMatchExpression() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.IInnerMatchExpression", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x432a0a2a4da3f5b4L)).version(1).interface_().parents("neo4j.cypher.structure.ICypherExpression").parentIds(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x4cbf2dbb00e3a2beL)).sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "4839691926370514356")).create();
  }
  private static ConceptDescriptor createDescriptorForIMatchExpression() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.IMatchExpression", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x3d300249aae889ddL)).version(1).interface_().sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "4409026550618950109")).create();
  }
  private static ConceptDescriptor createDescriptorForINamedIdentifier() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.INamedIdentifier", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x4841a8f104282c68L)).version(1).interface_().parents("jetbrains.mps.lang.core.structure.INamedConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L)).sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "5206628397327330408")).create();
  }
  private static ConceptDescriptor createDescriptorForINamedNullableIdentifier() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.INamedNullableIdentifier", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x4841a8f10429a6b5L)).version(1).interface_().parents("jetbrains.mps.lang.core.structure.INamedConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L)).sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "5206628397327427253")).create();
  }
  private static ConceptDescriptor createDescriptorForIOrderByExpression() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.IOrderByExpression", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x6607a8a1c5b383daL)).version(1).interface_().sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "7352030329465701338")).create();
  }
  private static ConceptDescriptor createDescriptorForIOrderedExpression() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.IOrderedExpression", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x7a3bb6c9eea6c001L)).version(1).interface_().sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "8807834474661724161")).create();
  }
  private static ConceptDescriptor createDescriptorForIPropertyContainer() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.IPropertyContainer", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x3d300249aaedff40L)).version(1).interface_().parents("neo4j.cypher.structure.INamedIdentifier").parentIds(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x4841a8f104282c68L)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(0x3a5d84dee698d467L, "inDefinitionMode", new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "4205663719920292967"))).properties("inDefinitionMode").childDescriptors(new ConceptDescriptorBuilder.Link(0x3d300249aaedff41L, "property", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x3d018fbe24361f8bL), true, true, false, new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "4409026550619307841"))).children(new String[]{"property"}, new boolean[]{true}).sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "4409026550619307840")).create();
  }
  private static ConceptDescriptor createDescriptorForIQuerySheetStatement() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.IQuerySheetStatement", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x119ac58303bc532dL)).version(1).interface_().sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "1268543411552277293")).create();
  }
  private static ConceptDescriptor createDescriptorForIReturnExpression() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.IReturnExpression", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x4cbf2dbb00e33640L)).version(1).interface_().sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "5530189148631283264")).create();
  }
  private static ConceptDescriptor createDescriptorForISetExpression() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.ISetExpression", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0xaaeb6006765b181L)).version(1).interface_().sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "769752699177906561")).create();
  }
  private static ConceptDescriptor createDescriptorForIWhereExpression() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.IWhereExpression", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x4841a8f1042e548dL)).version(1).interface_().sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "5206628397327733901")).create();
  }
  private static ConceptDescriptor createDescriptorForIWrite() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.IWrite", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x7a3bb6c9eea6bfffL)).version(1).interface_().sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "8807834474661724159")).create();
  }
  private static ConceptDescriptor createDescriptorForIWriteStatement() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.IWriteStatement", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x2376f01d7fbd1fa3L)).version(1).interface_().sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "2555493848067153827")).create();
  }
  private static ConceptDescriptor createDescriptorForIdIndex() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.IdIndex", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x119ac58303bb8384L)).super_("neo4j.cypher.structure.Index").version(1).super_(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x119ac58303bb837bL)).parents("neo4j.cypher.structure.Index").parentIds(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x119ac58303bb837bL)).childDescriptors(new ConceptDescriptorBuilder.Link(0x119ac58303bb8387L, "id", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc59b314L), false, true, false, new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "1268543411552224135"))).children(new String[]{"id"}, new boolean[]{true}).alias("idindex", "").sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "1268543411552224132")).create();
  }
  private static ConceptDescriptor createDescriptorForIdScalarFunction() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.IdScalarFunction", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x6de5edabd1c133e2L)).super_("neo4j.cypher.structure.ScalarFunction").version(1).super_(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x6de5edabd1bff138L)).parents("neo4j.cypher.structure.ScalarFunction").parentIds(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x6de5edabd1bff138L)).childDescriptors(new ConceptDescriptorBuilder.Link(0x6de5edabd1c16439L, "propertyContainerRef", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x6de5edabd1c16436L), false, false, false, new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "7918996842015188025"))).children(new String[]{"propertyContainerRef"}, new boolean[]{false}).alias("id", "").sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "7918996842015175650")).create();
  }
  private static ConceptDescriptor createDescriptorForImpermanentConnection() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.ImpermanentConnection", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x3d018fbe2431d7b0L)).super_("neo4j.cypher.structure.ConnectionStatement").version(1).super_(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x3d018fbe2431a79dL)).parents("neo4j.cypher.structure.ConnectionStatement").parentIds(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x3d018fbe2431a79dL)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(0x3d018fbe24346dddL, "memorySize", new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "4395952758104288733"))).properties("memorySize").sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "4395952758104119216")).create();
  }
  private static ConceptDescriptor createDescriptorForIndex() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.Index", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x119ac58303bb837bL)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).abstract_().sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "1268543411552224123")).create();
  }
  private static ConceptDescriptor createDescriptorForIndexedCypherResultRowMemberAccessExpression() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.IndexedCypherResultRowMemberAccessExpression", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x1af46b20b06a1554L)).super_("jetbrains.mps.baseLanguage.structure.Expression").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).parents("jetbrains.mps.baseLanguage.structure.Expression", "jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x19796fa16a19888bL)).childDescriptors(new ConceptDescriptorBuilder.Link(0x12071ad5056L, "resultRowTuple", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false, new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "1238857764950")), new ConceptDescriptorBuilder.Link(0x12071ae5facL, "index", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false, new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "1238857834412"))).children(new String[]{"resultRowTuple", "index"}, new boolean[]{false, false}).alias("[", "").sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "1942295127446394196")).create();
  }
  private static ConceptDescriptor createDescriptorForKeyValueNodeIndex() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.KeyValueNodeIndex", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x119ac58303bb837eL)).super_("neo4j.cypher.structure.NamedIndex").version(1).super_(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x119ac58303bb839fL)).parents("neo4j.cypher.structure.NamedIndex").parentIds(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x119ac58303bb839fL)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(0x119ac58303bb83c8L, "key", new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "1268543411552224200"))).properties("key").childDescriptors(new ConceptDescriptorBuilder.Link(0x3d018fbe24396679L, "value", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf93d565d10L), false, false, false, new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "4395952758104614521"))).children(new String[]{"value"}, new boolean[]{false}).alias("nodeindex", "").sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "1268543411552224126")).create();
  }
  private static ConceptDescriptor createDescriptorForKeyValueRelationshipIndex() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.KeyValueRelationshipIndex", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x432a0a2a4da99930L)).super_("neo4j.cypher.structure.NamedIndex").version(1).super_(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x119ac58303bb839fL)).parents("neo4j.cypher.structure.NamedIndex").parentIds(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x119ac58303bb839fL)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(0x432a0a2a4da99941L, "key", new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "4839691926370883905"))).properties("key").childDescriptors(new ConceptDescriptorBuilder.Link(0x432a0a2a4da99940L, "value", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf93d565d10L), false, false, false, new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "4839691926370883904"))).children(new String[]{"value"}, new boolean[]{false}).alias("relationshipindex", "").sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "4839691926370883888")).create();
  }
  private static ConceptDescriptor createDescriptorForLRRelationship() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.LRRelationship", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x2546b228cbcc2439L)).super_("neo4j.cypher.structure.Relationship").version(1).super_(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x637ffba7f2948fabL)).parents("neo4j.cypher.structure.Relationship").parentIds(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x637ffba7f2948fabL)).alias("->", "").sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "2686030116060668985")).create();
  }
  private static ConceptDescriptor createDescriptorForLTrimMStringFunction() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.LTrimMStringFunction", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x12636aedaa4e3ee5L)).super_("neo4j.cypher.structure.ModifyStringFunction").version(1).super_(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x12636aedaa4dea3fL)).parents("neo4j.cypher.structure.ModifyStringFunction").parentIds(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x12636aedaa4dea3fL)).alias("ltrim", "returns the original string with whitespace removed from the left side").sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "1325020284374105829")).create();
  }
  private static ConceptDescriptor createDescriptorForLabelsCollFunction() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.LabelsCollFunction", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x44ca2c77377271bL)).super_("neo4j.cypher.structure.CollectionFunction").version(1).super_(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x3528712027d3fd22L)).parents("neo4j.cypher.structure.CollectionFunction").parentIds(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x3528712027d3fd22L)).alias("labels", "").sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "309801451901101851")).create();
  }
  private static ConceptDescriptor createDescriptorForLastScalarFunction() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.LastScalarFunction", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x3528712027d43f1bL)).super_("neo4j.cypher.structure.ScalarFunction").version(1).super_(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x6de5edabd1bff138L)).parents("neo4j.cypher.structure.ScalarFunction").parentIds(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x6de5edabd1bff138L)).childDescriptors(new ConceptDescriptorBuilder.Link(0x3d300249aae5f5d8L, "expression", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false, new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "4409026550618781144"))).children(new String[]{"expression"}, new boolean[]{false}).alias("last", "").sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "3830435865999720219")).create();
  }
  private static ConceptDescriptor createDescriptorForLeftMStringFunction() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.LeftMStringFunction", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x12636aedaa4e3ec4L)).super_("neo4j.cypher.structure.ModifyStringFunction").version(1).super_(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x12636aedaa4dea3fL)).parents("neo4j.cypher.structure.ModifyStringFunction").parentIds(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x12636aedaa4dea3fL)).childDescriptors(new ConceptDescriptorBuilder.Link(0x12636aedaa4e3ec6L, "length", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false, new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "1325020284374105798"))).children(new String[]{"length"}, new boolean[]{false}).alias("left", "returns a string containing the left n characters of the original string").sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "1325020284374105796")).create();
  }
  private static ConceptDescriptor createDescriptorForLengthScalarFunction() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.LengthScalarFunction", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x3528712027d48762L)).super_("neo4j.cypher.structure.ScalarFunction").version(1).super_(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x6de5edabd1bff138L)).parents("neo4j.cypher.structure.ScalarFunction").parentIds(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x6de5edabd1bff138L)).childDescriptors(new ConceptDescriptorBuilder.Link(0x3d300249aae56879L, "expression", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false, new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "4409026550618744953"))).children(new String[]{"expression"}, new boolean[]{false}).alias("length", "").sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "3830435865999738722")).create();
  }
  private static ConceptDescriptor createDescriptorForLimitStatement() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.LimitStatement", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x4d5ba0408a4bacceL)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).childDescriptors(new ConceptDescriptorBuilder.Link(0x4d5ba0408a4baccfL, "amount", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false, new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "5574225162859687119"))).children(new String[]{"amount"}, new boolean[]{false}).alias("limit", "").sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "5574225162859687118")).create();
  }
  private static ConceptDescriptor createDescriptorForLowerMStringFunction() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.LowerMStringFunction", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x12636aedaa4e3f18L)).super_("neo4j.cypher.structure.ModifyStringFunction").version(1).super_(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x12636aedaa4dea3fL)).parents("neo4j.cypher.structure.ModifyStringFunction").parentIds(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x12636aedaa4dea3fL)).alias("lower", "returns the original string in lowercase").sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "1325020284374105880")).create();
  }
  private static ConceptDescriptor createDescriptorForLuceneIndex() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.LuceneIndex", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x119ac58303bb8381L)).super_("neo4j.cypher.structure.NamedIndex").version(1).super_(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x119ac58303bb839fL)).parents("neo4j.cypher.structure.NamedIndex").parentIds(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x119ac58303bb839fL)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(0x119ac58303bb8491L, "luceneQuery", new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "1268543411552224401"))).properties("luceneQuery").sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "1268543411552224129")).create();
  }
  private static ConceptDescriptor createDescriptorForMatchStatement() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.MatchStatement", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x3d018fbe24307713L)).super_("neo4j.cypher.structure.CypherStatement").version(1).super_(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x4cbf2dbb00e54a8bL)).parents("neo4j.cypher.structure.CypherStatement").parentIds(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x4cbf2dbb00e54a8bL)).childDescriptors(new ConceptDescriptorBuilder.Link(0x3528712027cee151L, "pathExpression", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x432a0a2a4da444f2L), false, true, false, new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "3830435865999368529"))).children(new String[]{"pathExpression"}, new boolean[]{true}).alias("match", "").sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "4395952758104028947")).create();
  }
  private static ConceptDescriptor createDescriptorForMathFunction() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.MathFunction", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x3528712027d43f1eL)).super_("neo4j.cypher.structure.Function").version(1).super_(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x3d018fbe2430770eL)).parents("neo4j.cypher.structure.Function").parentIds(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x3d018fbe2430770eL)).childDescriptors(new ConceptDescriptorBuilder.Link(0x3528712027d43f2dL, "expression", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false, new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "3830435865999720237"))).children(new String[]{"expression"}, new boolean[]{false}).abstract_().sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "3830435865999720222")).create();
  }
  private static ConceptDescriptor createDescriptorForMaxAggregate() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.MaxAggregate", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x2546b228cbcc89e7L)).super_("neo4j.cypher.structure.AggregateFunction").version(1).super_(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x2546b228cbcc89daL)).parents("neo4j.cypher.structure.AggregateFunction").parentIds(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x2546b228cbcc89daL)).alias("max", "").sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "2686030116060695015")).create();
  }
  private static ConceptDescriptor createDescriptorForMinAggregate() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.MinAggregate", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x2546b228cbccb0c9L)).super_("neo4j.cypher.structure.AggregateFunction").version(1).super_(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x2546b228cbcc89daL)).parents("neo4j.cypher.structure.AggregateFunction").parentIds(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x2546b228cbcc89daL)).alias("min", "").sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "2686030116060704969")).create();
  }
  private static ConceptDescriptor createDescriptorForModifyStringFunction() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.ModifyStringFunction", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x12636aedaa4dea3fL)).super_("neo4j.cypher.structure.StringFunction").version(1).super_(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x12636aedaa4dea12L)).parents("neo4j.cypher.structure.StringFunction").parentIds(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x12636aedaa4dea12L)).childDescriptors(new ConceptDescriptorBuilder.Link(0x12636aedaa4dea4fL, "original", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false, new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "1325020284374084175"))).children(new String[]{"original"}, new boolean[]{false}).sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "1325020284374084159")).create();
  }
  private static ConceptDescriptor createDescriptorForNamedIndex() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.NamedIndex", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x119ac58303bb839fL)).super_("neo4j.cypher.structure.Index").version(1).super_(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x119ac58303bb837bL)).parents("neo4j.cypher.structure.Index", "jetbrains.mps.baseLanguage.structure.IValidIdentifier").parentIds(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x119ac58303bb837bL), MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11a3afa8c0dL)).abstract_().sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "1268543411552224159")).create();
  }
  private static ConceptDescriptor createDescriptorForNamedNodeRef() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.NamedNodeRef", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x3d018fbe2434a1cdL)).super_("jetbrains.mps.baseLanguage.structure.Expression").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).parents("jetbrains.mps.baseLanguage.structure.Expression", "neo4j.cypher.structure.ICypherExpression", "neo4j.cypher.structure.IMatchExpression", "neo4j.cypher.structure.ICreateExpression").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x4cbf2dbb00e3a2beL), MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x3d300249aae889ddL), MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x40ea72fa23eb985dL)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(0x3d018fbe2434a1ceL, "node1", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x119ac58303ba8e11L), false, new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "4395952758104302030"))).references("node1").sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "4395952758104302029")).create();
  }
  private static ConceptDescriptor createDescriptorForNamedPathRef() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.NamedPathRef", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x432a0a2a4da6df9bL)).super_("jetbrains.mps.baseLanguage.structure.Expression").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).parents("jetbrains.mps.baseLanguage.structure.Expression", "neo4j.cypher.structure.ICypherExpression", "neo4j.cypher.structure.IReturnExpression", "neo4j.cypher.structure.IDeleteExpression").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x4cbf2dbb00e3a2beL), MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x4cbf2dbb00e33640L), MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0xaaeb60067615aa4L)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(0x432a0a2a4da6df9dL, "pathExpression", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x432a0a2a4da444f2L), false, new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "4839691926370705309"))).references("pathExpression").sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "4839691926370705307")).create();
  }
  private static ConceptDescriptor createDescriptorForNamedPropertyContainerRef() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.NamedPropertyContainerRef", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x6de5edabd1c16436L)).super_("jetbrains.mps.baseLanguage.structure.Expression").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).parents("jetbrains.mps.baseLanguage.structure.Expression", "neo4j.cypher.structure.ICypherExpression", "neo4j.cypher.structure.IReturnExpression", "neo4j.cypher.structure.IWhereExpression", "neo4j.cypher.structure.IOrderByExpression", "neo4j.cypher.structure.IDeleteExpression", "neo4j.cypher.structure.ISetExpression").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x4cbf2dbb00e3a2beL), MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x4cbf2dbb00e33640L), MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x4841a8f1042e548dL), MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x6607a8a1c5b383daL), MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0xaaeb60067615aa4L), MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0xaaeb6006765b181L)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(0x6de5edabd1c16437L, "propertyContainer", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x3d300249aaedff40L), false, new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "7918996842015188023"))).references("propertyContainer").sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "7918996842015188022")).create();
  }
  private static ConceptDescriptor createDescriptorForNamedRelationshipRef() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.NamedRelationshipRef", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x6de5edabd1c16494L)).super_("jetbrains.mps.baseLanguage.structure.Expression").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).parents("jetbrains.mps.baseLanguage.structure.Expression", "neo4j.cypher.structure.ICypherExpression").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x4cbf2dbb00e3a2beL)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(0x6de5edabd1c1649cL, "namedRelationship", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x637ffba7f2948fabL), false, new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "7918996842015188124"))).references("namedRelationship").sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "7918996842015188116")).create();
  }
  private static ConceptDescriptor createDescriptorForNeo4jExec() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.Neo4jExec", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x52178e8920cb2b25L)).super_("jetbrains.mps.baseLanguage.structure.Expression").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).parents("jetbrains.mps.baseLanguage.structure.Expression").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).childDescriptors(new ConceptDescriptorBuilder.Link(0x52178e8920cb340cL, "query", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x52178e89215b5968L), false, false, false, new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "5915353355186287628")), new ConceptDescriptorBuilder.Link(0x52178e8920cb340eL, "graphDb", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false, new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "5915353355186287630"))).children(new String[]{"query", "graphDb"}, new boolean[]{false, false}).alias("neo4jexec", "").sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "5915353355186285349")).create();
  }
  private static ConceptDescriptor createDescriptorForNode() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.Node", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x119ac58303ba8e11L)).super_("jetbrains.mps.baseLanguage.structure.Expression").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).parents("jetbrains.mps.baseLanguage.structure.Expression", "neo4j.cypher.structure.ICypherExpression", "neo4j.cypher.structure.IPropertyContainer", "neo4j.cypher.structure.IMatchExpression", "neo4j.cypher.structure.ICreateExpression").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x4cbf2dbb00e3a2beL), MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x3d300249aaedff40L), MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x3d300249aae889ddL), MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x40ea72fa23eb985dL)).childDescriptors(new ConceptDescriptorBuilder.Link(0x30b8c283b3cd3fddL, "type", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x30b8c283b3c55a42L), true, false, false, new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "3510769780448378845"))).children(new String[]{"type"}, new boolean[]{false}).alias("node", "").sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "1268543411552161297")).create();
  }
  private static ConceptDescriptor createDescriptorForNodeType() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.NodeType", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x30b8c283b3c55a42L)).super_("jetbrains.mps.baseLanguage.structure.Expression").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).parents("jetbrains.mps.baseLanguage.structure.Expression", "neo4j.cypher.structure.ICypherExpression", "jetbrains.mps.baseLanguage.structure.IValidIdentifier", "neo4j.cypher.structure.IMatchExpression", "neo4j.cypher.structure.IInnerMatchExpression").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x4cbf2dbb00e3a2beL), MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11a3afa8c0dL), MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x3d300249aae889ddL), MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x432a0a2a4da3f5b4L)).sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "3510769780447861314")).create();
  }
  private static ConceptDescriptor createDescriptorForNodesCollFunction() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.NodesCollFunction", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x3528712027d4875dL)).super_("neo4j.cypher.structure.CollectionFunction").version(1).super_(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x3528712027d3fd22L)).parents("neo4j.cypher.structure.CollectionFunction").parentIds(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x3528712027d3fd22L)).childDescriptors(new ConceptDescriptorBuilder.Link(0x3d300249aae8f2acL, "namedRelationshipRef", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x6de5edabd1c16494L), false, false, false, new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "4409026550618976940"))).children(new String[]{"namedRelationshipRef"}, new boolean[]{false}).alias("nodes", "Returns all nodes in a path").sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "3830435865999738717")).create();
  }
  private static ConceptDescriptor createDescriptorForNonePredicateFunction() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.NonePredicateFunction", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x4841a8f1042c9030L)).super_("neo4j.cypher.structure.PredicateFunction").version(1).super_(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x4841a8f1042c9027L)).parents("neo4j.cypher.structure.PredicateFunction").parentIds(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x4841a8f1042c9027L)).alias("none", "").sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "5206628397327618096")).create();
  }
  private static ConceptDescriptor createDescriptorForOrderByExpression() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.OrderByExpression", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x3d018fbe24314ff0L)).super_("jetbrains.mps.baseLanguage.structure.Expression").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).parents("jetbrains.mps.baseLanguage.structure.Expression", "neo4j.cypher.structure.ICypherExpression", "neo4j.cypher.structure.IOrderByExpression").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x4cbf2dbb00e3a2beL), MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x6607a8a1c5b383daL)).childDescriptors(new ConceptDescriptorBuilder.Link(0x6607a8a1c5b01e5fL, "expression", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false, new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "7352030329465478751"))).children(new String[]{"expression"}, new boolean[]{false}).abstract_().sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "4395952758104084464")).create();
  }
  private static ConceptDescriptor createDescriptorForOrderByStatement() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.OrderByStatement", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x4cbf2dbb00e59362L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).childDescriptors(new ConceptDescriptorBuilder.Link(0x4cbf2dbb00e59365L, "expressions", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, true, false, new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "5530189148631438181"))).children(new String[]{"expressions"}, new boolean[]{true}).alias("orderby", "").sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "5530189148631438178")).create();
  }
  private static ConceptDescriptor createDescriptorForParameter() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.Parameter", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x4841a8f1042a6ce7L)).super_("jetbrains.mps.baseLanguage.structure.Expression").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).parents("jetbrains.mps.baseLanguage.structure.Expression", "neo4j.cypher.structure.ICypherExpression", "neo4j.cypher.structure.INamedIdentifier", "neo4j.cypher.structure.IReturnExpression", "neo4j.cypher.structure.IOrderByExpression").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x4cbf2dbb00e3a2beL), MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x4841a8f104282c68L), MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x4cbf2dbb00e33640L), MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x6607a8a1c5b383daL)).alias("{", "").sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "5206628397327477991")).create();
  }
  private static ConceptDescriptor createDescriptorForPathExpression() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.PathExpression", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x432a0a2a4da444f2L)).super_("jetbrains.mps.baseLanguage.structure.Expression").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).parents("jetbrains.mps.baseLanguage.structure.Expression", "neo4j.cypher.structure.ICypherExpression", "neo4j.cypher.structure.INamedIdentifier", "neo4j.cypher.structure.IOrderedExpression").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x4cbf2dbb00e3a2beL), MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x4841a8f104282c68L), MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x7a3bb6c9eea6c001L)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(0x432a0a2a4da44e84L, "named", new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "4839691926370537092"))).properties("named").childDescriptors(new ConceptDescriptorBuilder.Link(0x432a0a2a4da507d3L, "expression", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false, new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "4839691926370584531"))).children(new String[]{"expression"}, new boolean[]{false}).sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "4839691926370534642")).create();
  }
  private static ConceptDescriptor createDescriptorForPathFunction() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.PathFunction", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x432a0a2a4da776d7L)).super_("neo4j.cypher.structure.Function").version(1).super_(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x3d018fbe2430770eL)).parents("neo4j.cypher.structure.Function", "neo4j.cypher.structure.IMatchExpression").parentIds(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x3d018fbe2430770eL), MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x3d300249aae889ddL)).childDescriptors(new ConceptDescriptorBuilder.Link(0x432a0a2a4da776e4L, "expression", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false, new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "4839691926370744036"))).children(new String[]{"expression"}, new boolean[]{false}).abstract_().sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "4839691926370744023")).create();
  }
  private static ConceptDescriptor createDescriptorForPercentileAggregateFunction() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.PercentileAggregateFunction", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x432a0a2a4da0bf21L)).super_("neo4j.cypher.structure.AggregateFunction").version(1).super_(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x2546b228cbcc89daL)).parents("neo4j.cypher.structure.AggregateFunction").parentIds(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x2546b228cbcc89daL)).abstract_().sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "4839691926370303777")).create();
  }
  private static ConceptDescriptor createDescriptorForPercentileContAggregate() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.PercentileContAggregate", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x432a0a2a4da0bf1bL)).super_("neo4j.cypher.structure.AggregateFunction").version(1).super_(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x2546b228cbcc89daL)).parents("neo4j.cypher.structure.AggregateFunction").parentIds(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x2546b228cbcc89daL)).alias("percentile_cont", "Continuous percentile").sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "4839691926370303771")).create();
  }
  private static ConceptDescriptor createDescriptorForPercentileDiscAggregate() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.PercentileDiscAggregate", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x432a0a2a4da0bf19L)).super_("neo4j.cypher.structure.AggregateFunction").version(1).super_(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x2546b228cbcc89daL)).parents("neo4j.cypher.structure.AggregateFunction").parentIds(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x2546b228cbcc89daL)).alias("percentile_disc", "Discrete percentile").sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "4839691926370303769")).create();
  }
  private static ConceptDescriptor createDescriptorForPredicateExpression() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.PredicateExpression", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x4841a8f1042c9047L)).super_("jetbrains.mps.baseLanguage.structure.Expression").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).parents("jetbrains.mps.baseLanguage.structure.Expression", "neo4j.cypher.structure.IReturnExpression").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x4cbf2dbb00e33640L)).childDescriptors(new ConceptDescriptorBuilder.Link(0x4841a8f1042c9048L, "expression", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false, new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "5206628397327618120"))).children(new String[]{"expression"}, new boolean[]{false}).sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "5206628397327618119")).create();
  }
  private static ConceptDescriptor createDescriptorForPredicateFunction() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.PredicateFunction", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x4841a8f1042c9027L)).super_("neo4j.cypher.structure.Function").version(1).super_(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x3d018fbe2430770eL)).parents("neo4j.cypher.structure.Function", "neo4j.cypher.structure.INamedIdentifier").parentIds(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x3d018fbe2430770eL), MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x4841a8f104282c68L)).childDescriptors(new ConceptDescriptorBuilder.Link(0x4841a8f1042c9046L, "collectionExpression", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x4841a8f1042cf215L), false, false, false, new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "5206628397327618118")), new ConceptDescriptorBuilder.Link(0x4841a8f1042c9077L, "predicateExpression", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x4841a8f1042c9047L), false, false, false, new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "5206628397327618167"))).children(new String[]{"collectionExpression", "predicateExpression"}, new boolean[]{false, false}).abstract_().sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "5206628397327618087")).create();
  }
  private static ConceptDescriptor createDescriptorForProperty() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.Property", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x3d018fbe24361f8bL)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "neo4j.cypher.structure.INamedNullableIdentifier", "neo4j.cypher.structure.IMatchExpression", "neo4j.cypher.structure.ICreateExpression").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x4841a8f10429a6b5L), MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x3d300249aae889ddL), MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x40ea72fa23eb985dL)).childDescriptors(new ConceptDescriptorBuilder.Link(0x2bf84db8340f0923L, "value", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false, new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "3168367791397865763"))).children(new String[]{"value"}, new boolean[]{false}).sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "4395952758104399755")).create();
  }
  private static ConceptDescriptor createDescriptorForPropertyContainer() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.PropertyContainer", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x637ffba7f293c47dL)).super_("jetbrains.mps.baseLanguage.structure.Expression").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).parents("jetbrains.mps.baseLanguage.structure.Expression", "neo4j.cypher.structure.INamedIdentifier").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x4841a8f104282c68L)).childDescriptors(new ConceptDescriptorBuilder.Link(0x2f6a0e1f0b2f4faL, "property", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x3d018fbe24361f8bL), true, true, false, new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "213534924613022970"))).children(new String[]{"property"}, new boolean[]{true}).abstract_().sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "7169725830544999549")).create();
  }
  private static ConceptDescriptor createDescriptorForPropertyOperation() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.PropertyOperation", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x2bf84db8340e211fL)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "neo4j.cypher.structure.INamedNullableIdentifier", "jetbrains.mps.baseLanguage.structure.IOperation").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x4841a8f10429a6b5L), MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x116b46ac030L)).sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "3168367791397806367")).create();
  }
  private static ConceptDescriptor createDescriptorForQueryEmptyStatement() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.QueryEmptyStatement", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x119ac58303bc42f4L)).super_("jetbrains.mps.baseLanguage.structure.Statement").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L)).parents("jetbrains.mps.baseLanguage.structure.Statement", "neo4j.cypher.structure.IQuerySheetStatement").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L), MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x119ac58303bc532dL)).alias("EmptyQuery", "").sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "1268543411552273140")).create();
  }
  private static ConceptDescriptor createDescriptorForQueryExpression() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.QueryExpression", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x119ac58303b87b4fL)).super_("jetbrains.mps.baseLanguage.structure.Expression").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).parents("jetbrains.mps.baseLanguage.structure.Expression").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).abstract_().sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "1268543411552025423")).create();
  }
  private static ConceptDescriptor createDescriptorForQuerySheet() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.QuerySheet", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x119ac58303b7d8aeL)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L)).childDescriptors(new ConceptDescriptorBuilder.Link(0x119ac58303b87b52L, "statement", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x119ac58303bc532dL), true, true, false, new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "1268543411552025426"))).children(new String[]{"statement"}, new boolean[]{true}).rootable().sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "1268543411551983790")).create();
  }
  private static ConceptDescriptor createDescriptorForQueryStringExpression() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.QueryStringExpression", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x52178e89215b5968L)).version(1).interface_().sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "5915353355195734376")).create();
  }
  private static ConceptDescriptor createDescriptorForQueryStringStatement() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.QueryStringStatement", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x36087ce47f4eb88eL)).super_("jetbrains.mps.baseLanguage.structure.Statement").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L)).parents("jetbrains.mps.baseLanguage.structure.Statement", "jetbrains.mps.baseLanguage.structure.IValidIdentifier", "neo4j.cypher.structure.IQuerySheetStatement").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L), MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11a3afa8c0dL), MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x119ac58303bc532dL)).childDescriptors(new ConceptDescriptorBuilder.Link(0x36087ce47f4eb88fL, "type", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x36087ce47f5b9b0eL), false, false, false, new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "3893499198692046991")), new ConceptDescriptorBuilder.Link(0x36087ce47f4eb892L, "queryExpression", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x52178e89215b5968L), false, false, false, new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "3893499198692046994"))).children(new String[]{"type", "queryExpression"}, new boolean[]{false, false}).alias("QueryStringTyped", "").sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "3893499198692046990")).create();
  }
  private static ConceptDescriptor createDescriptorForQueryStringStatmentUntyped() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.QueryStringStatmentUntyped", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x79554654e75f67e1L)).super_("neo4j.cypher.structure.QueryStringStatement").version(1).super_(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x36087ce47f4eb88eL)).parents("neo4j.cypher.structure.QueryStringStatement").parentIds(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x36087ce47f4eb88eL)).alias("QueryString", "").sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "8742971582082672609")).create();
  }
  private static ConceptDescriptor createDescriptorForQueryStringVisualisationStatement() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.QueryStringVisualisationStatement", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x1b6d8ae4aaea244cL)).super_("neo4j.cypher.structure.QueryStringStatement").version(1).super_(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x36087ce47f4eb88eL)).parents("neo4j.cypher.structure.QueryStringStatement").parentIds(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x36087ce47f4eb88eL)).alias("QueryVisualisation", "").sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "1976388526210163788")).create();
  }
  private static ConceptDescriptor createDescriptorForQueryTupleExpression() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.QueryTupleExpression", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x52178e89215b5fe0L)).version(1).interface_().sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "5915353355195736032")).create();
  }
  private static ConceptDescriptor createDescriptorForQueryTupleStatement() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.QueryTupleStatement", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x119ac58303b80605L)).super_("jetbrains.mps.baseLanguage.structure.Statement").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L)).parents("jetbrains.mps.baseLanguage.structure.Statement", "jetbrains.mps.baseLanguage.structure.IValidIdentifier", "neo4j.cypher.structure.IQuerySheetStatement").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L), MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11a3afa8c0dL), MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x119ac58303bc532dL)).childDescriptors(new ConceptDescriptorBuilder.Link(0x52178e8921638423L, "type", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x52178e892162ba1aL), false, false, false, new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "5915353355196269603")), new ConceptDescriptorBuilder.Link(0x119ac58303ba8e02L, "queryExpression", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x52178e89215b5fe0L), false, false, false, new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "1268543411552161282"))).children(new String[]{"type", "queryExpression"}, new boolean[]{false, false}).alias("QueryTupleTyped", "").sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "1268543411551995397")).create();
  }
  private static ConceptDescriptor createDescriptorForRLRelationship() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.RLRelationship", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x2546b228cbcc43a1L)).super_("neo4j.cypher.structure.Relationship").version(1).super_(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x637ffba7f2948fabL)).parents("neo4j.cypher.structure.Relationship").parentIds(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x637ffba7f2948fabL)).alias("<-", "").sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "2686030116060677025")).create();
  }
  private static ConceptDescriptor createDescriptorForRTrimMStringFunction() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.RTrimMStringFunction", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x12636aedaa4e3efeL)).super_("neo4j.cypher.structure.ModifyStringFunction").version(1).super_(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x12636aedaa4dea3fL)).parents("neo4j.cypher.structure.ModifyStringFunction").parentIds(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x12636aedaa4dea3fL)).alias("rtrim", "returns the original string with whitespace removed from the right side").sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "1325020284374105854")).create();
  }
  private static ConceptDescriptor createDescriptorForRangeCollFunction() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.RangeCollFunction", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x6de5edabd1bff14aL)).super_("neo4j.cypher.structure.CollectionFunction").version(1).super_(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x3528712027d3fd22L)).parents("neo4j.cypher.structure.CollectionFunction").parentIds(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x3528712027d3fd22L)).childDescriptors(new ConceptDescriptorBuilder.Link(0x3d300249aae79b8aL, "start", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false, new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "4409026550618889098")), new ConceptDescriptorBuilder.Link(0x3d300249aae79b8bL, "end", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false, new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "4409026550618889099")), new ConceptDescriptorBuilder.Link(0x3d300249aae79b8cL, "step", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), true, false, false, new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "4409026550618889100"))).children(new String[]{"start", "end", "step"}, new boolean[]{false, false, false}).alias("range", "").sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "7918996842015093066")).create();
  }
  private static ConceptDescriptor createDescriptorForReadOnlyQueryExpression() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.ReadOnlyQueryExpression", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x119ac58303ba8e05L)).super_("neo4j.cypher.structure.QueryExpression").version(1).super_(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x119ac58303b87b4fL)).parents("neo4j.cypher.structure.QueryExpression").parentIds(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x119ac58303b87b4fL)).childDescriptors(new ConceptDescriptorBuilder.Link(0x40adc46d80ea8abeL, "startStatement", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x3d018fbe2438aca4L), true, false, false, new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "4660597163991665342")), new ConceptDescriptorBuilder.Link(0x3d018fbe24317aecL, "matchStatement", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x3d018fbe24307713L), true, false, false, new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "4395952758104095468")), new ConceptDescriptorBuilder.Link(0x3d018fbe24317aedL, "whereStatement", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x3d018fbe24307714L), true, false, false, new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "4395952758104095469")), new ConceptDescriptorBuilder.Link(0x3d018fbe2438ac9fL, "returnStatementBlock", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x2959fa271e1707a3L), false, false, false, new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "4395952758104566943"))).children(new String[]{"startStatement", "matchStatement", "whereStatement", "returnStatementBlock"}, new boolean[]{false, false, false, false}).abstract_().sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "1268543411552161285")).create();
  }
  private static ConceptDescriptor createDescriptorForReadOnlyQueryStringExpression() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.ReadOnlyQueryStringExpression", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x52178e89215b60f8L)).super_("neo4j.cypher.structure.ReadOnlyQueryExpression").version(1).super_(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x119ac58303ba8e05L)).parents("neo4j.cypher.structure.ReadOnlyQueryExpression", "neo4j.cypher.structure.QueryStringExpression").parentIds(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x119ac58303ba8e05L), MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x52178e89215b5968L)).alias("roqs", "").sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "5915353355195736312")).create();
  }
  private static ConceptDescriptor createDescriptorForReadOnlyQueryTupleExpression() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.ReadOnlyQueryTupleExpression", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x52178e89215b6169L)).super_("neo4j.cypher.structure.ReadOnlyQueryExpression").version(1).super_(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x119ac58303ba8e05L)).parents("neo4j.cypher.structure.ReadOnlyQueryExpression", "neo4j.cypher.structure.QueryTupleExpression").parentIds(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x119ac58303ba8e05L), MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x52178e89215b5fe0L)).alias("roqt", "").sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "5915353355195736425")).create();
  }
  private static ConceptDescriptor createDescriptorForReadWriteQueryExpression() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.ReadWriteQueryExpression", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x119ac58303ba8e06L)).super_("neo4j.cypher.structure.QueryExpression").version(1).super_(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x119ac58303b87b4fL)).parents("neo4j.cypher.structure.QueryExpression").parentIds(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x119ac58303b87b4fL)).childDescriptors(new ConceptDescriptorBuilder.Link(0x40adc46d80ea8ac0L, "startStatement", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x3d018fbe2438aca4L), true, false, false, new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "4660597163991665344")), new ConceptDescriptorBuilder.Link(0x3528712027d600d4L, "matchStatement", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x3d018fbe24307713L), true, false, false, new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "3830435865999835348")), new ConceptDescriptorBuilder.Link(0x3528712027d600d6L, "whereStatement", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x3d018fbe24307714L), true, false, false, new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "3830435865999835350")), new ConceptDescriptorBuilder.Link(0x3528712027d6011dL, "writeStatement", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x2376f01d7fbd1fa3L), true, true, false, new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "3830435865999835421")), new ConceptDescriptorBuilder.Link(0x3528712027d600d8L, "returnStatementBlock", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x2959fa271e1707a3L), true, false, false, new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "3830435865999835352"))).children(new String[]{"startStatement", "matchStatement", "whereStatement", "writeStatement", "returnStatementBlock"}, new boolean[]{false, false, false, true, false}).abstract_().alias("rwq", "").sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "1268543411552161286")).create();
  }
  private static ConceptDescriptor createDescriptorForReadWriteQueryStringExpression() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.ReadWriteQueryStringExpression", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x52178e89215b61b2L)).super_("neo4j.cypher.structure.ReadWriteQueryExpression").version(1).super_(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x119ac58303ba8e06L)).parents("neo4j.cypher.structure.ReadWriteQueryExpression", "neo4j.cypher.structure.QueryStringExpression").parentIds(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x119ac58303ba8e06L), MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x52178e89215b5968L)).alias("rwqs", "").sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "5915353355195736498")).create();
  }
  private static ConceptDescriptor createDescriptorForReadWriteQueryTupleExpression() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.ReadWriteQueryTupleExpression", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x52178e89215b61cfL)).super_("neo4j.cypher.structure.ReadWriteQueryExpression").version(1).super_(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x119ac58303ba8e06L)).parents("neo4j.cypher.structure.ReadWriteQueryExpression", "neo4j.cypher.structure.QueryTupleExpression").parentIds(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x119ac58303ba8e06L), MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x52178e89215b5fe0L)).alias("rwqt", "").sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "5915353355195736527")).create();
  }
  private static ConceptDescriptor createDescriptorForReduceCollFunction() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.ReduceCollFunction", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x6de5edabd1bff14bL)).super_("neo4j.cypher.structure.CollectionFunction").version(1).super_(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x3528712027d3fd22L)).parents("neo4j.cypher.structure.CollectionFunction").parentIds(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x3528712027d3fd22L)).sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "7918996842015093067")).create();
  }
  private static ConceptDescriptor createDescriptorForRelationship() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.Relationship", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x637ffba7f2948fabL)).super_("jetbrains.mps.baseLanguage.structure.BinaryOperation").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xfbdeb6fecfL)).parents("jetbrains.mps.baseLanguage.structure.BinaryOperation", "neo4j.cypher.structure.ICypherExpression", "neo4j.cypher.structure.IPropertyContainer", "neo4j.cypher.structure.IMatchExpression", "neo4j.cypher.structure.ICreateExpression").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xfbdeb6fecfL), MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x4cbf2dbb00e3a2beL), MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x3d300249aaedff40L), MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x3d300249aae889ddL), MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x40ea72fa23eb985dL)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(0x3d300249aaf2a1c7L, "concrete", new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "4409026550619611591")), new ConceptDescriptorBuilder.Prop(0x432a0a2a4da2f43dL, "specifyHops", new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "4839691926370448445")), new ConceptDescriptorBuilder.Prop(0x432a0a2a4da2f43bL, "minHops", new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "4839691926370448443")), new ConceptDescriptorBuilder.Prop(0x432a0a2a4da2f43cL, "maxHops", new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "4839691926370448444"))).properties("concrete", "specifyHops", "minHops", "maxHops").childDescriptors(new ConceptDescriptorBuilder.Link(0x2546b228cbcb3743L, "type", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x2546b228cbcb3742L), true, true, false, new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "2686030116060608323"))).children(new String[]{"type"}, new boolean[]{true}).abstract_().sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "7169725830545051563")).create();
  }
  private static ConceptDescriptor createDescriptorForRelationshipType() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.RelationshipType", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x2546b228cbcb3742L)).super_("jetbrains.mps.baseLanguage.structure.Expression").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).parents("jetbrains.mps.baseLanguage.structure.Expression", "neo4j.cypher.structure.ICypherExpression", "jetbrains.mps.baseLanguage.structure.IValidIdentifier", "neo4j.cypher.structure.IMatchExpression", "neo4j.cypher.structure.IInnerMatchExpression").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x4cbf2dbb00e3a2beL), MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11a3afa8c0dL), MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x3d300249aae889ddL), MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x432a0a2a4da3f5b4L)).sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "2686030116060608322")).create();
  }
  private static ConceptDescriptor createDescriptorForRelationshipsCollFunction() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.RelationshipsCollFunction", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x3528712027d48761L)).super_("neo4j.cypher.structure.CollectionFunction").version(1).super_(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x3528712027d3fd22L)).parents("neo4j.cypher.structure.CollectionFunction").parentIds(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x3528712027d3fd22L)).childDescriptors(new ConceptDescriptorBuilder.Link(0x3d300249aae97832L, "namedRelationshipRef", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x6de5edabd1c16494L), false, false, false, new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "4409026550619011122"))).children(new String[]{"namedRelationshipRef"}, new boolean[]{false}).alias("relationships", "").sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "3830435865999738721")).create();
  }
  private static ConceptDescriptor createDescriptorForReplaceMStringFunction() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.ReplaceMStringFunction", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x12636aedaa4dea4eL)).super_("neo4j.cypher.structure.ModifyStringFunction").version(1).super_(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x12636aedaa4dea3fL)).parents("neo4j.cypher.structure.ModifyStringFunction").parentIds(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x12636aedaa4dea3fL)).childDescriptors(new ConceptDescriptorBuilder.Link(0x12636aedaa4df1e3L, "search", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false, new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "1325020284374086115")), new ConceptDescriptorBuilder.Link(0x12636aedaa4df1e4L, "replace", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false, new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "1325020284374086116"))).children(new String[]{"search", "replace"}, new boolean[]{false, false}).alias("replace", "returns a string with the search string replaced by the replace string").sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "1325020284374084174")).create();
  }
  private static ConceptDescriptor createDescriptorForReturnStatement() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.ReturnStatement", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x3d018fbe24389e5eL)).super_("neo4j.cypher.structure.CypherStatement").version(1).super_(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x4cbf2dbb00e54a8bL)).parents("neo4j.cypher.structure.CypherStatement").parentIds(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x4cbf2dbb00e54a8bL)).childDescriptors(new ConceptDescriptorBuilder.Link(0x3d018fbe24317aeeL, "returnExpression", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, true, false, new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "4395952758104095470"))).children(new String[]{"returnExpression"}, new boolean[]{true}).sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "4395952758104563294")).create();
  }
  private static ConceptDescriptor createDescriptorForReturnStatementBlock() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.ReturnStatementBlock", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x2959fa271e1707a3L)).super_("neo4j.cypher.structure.CypherStatement").version(1).super_(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x4cbf2dbb00e54a8bL)).parents("neo4j.cypher.structure.CypherStatement").parentIds(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x4cbf2dbb00e54a8bL)).childDescriptors(new ConceptDescriptorBuilder.Link(0x2959fa271e1707a5L, "returnStatement", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x3d018fbe24389e5eL), false, false, false, new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "2979687674397788069")), new ConceptDescriptorBuilder.Link(0x2959fa271e16b41dL, "orderByStatement", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x4cbf2dbb00e59362L), true, false, false, new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "2979687674397766685")), new ConceptDescriptorBuilder.Link(0x2959fa271e16b41fL, "skipStatement", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x2959fa271e1657eaL), true, false, false, new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "2979687674397766687")), new ConceptDescriptorBuilder.Link(0x4d5ba0408a573dabL, "limitStatement", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x4d5ba0408a4bacceL), true, false, false, new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "5574225162860445099"))).children(new String[]{"returnStatement", "orderByStatement", "skipStatement", "limitStatement"}, new boolean[]{false, false, false, false}).alias("return", "").sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "2979687674397788067")).create();
  }
  private static ConceptDescriptor createDescriptorForRightMStringFunction() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.RightMStringFunction", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x12636aedaa4e3ed9L)).super_("neo4j.cypher.structure.ModifyStringFunction").version(1).super_(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x12636aedaa4dea3fL)).parents("neo4j.cypher.structure.ModifyStringFunction").parentIds(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x12636aedaa4dea3fL)).childDescriptors(new ConceptDescriptorBuilder.Link(0x12636aedaa4e3edaL, "length", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false, new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "1325020284374105818"))).children(new String[]{"length"}, new boolean[]{false}).alias("right", "returns a string containing the right n characters of the original string").sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "1325020284374105817")).create();
  }
  private static ConceptDescriptor createDescriptorForRoundMathFunction() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.RoundMathFunction", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x3528712027d43f20L)).super_("neo4j.cypher.structure.MathFunction").version(1).super_(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x3528712027d43f1eL)).parents("neo4j.cypher.structure.MathFunction").parentIds(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x3528712027d43f1eL)).alias("round", "").sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "3830435865999720224")).create();
  }
  private static ConceptDescriptor createDescriptorForScalarFunction() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.ScalarFunction", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x6de5edabd1bff138L)).super_("neo4j.cypher.structure.Function").version(1).super_(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x3d018fbe2430770eL)).parents("neo4j.cypher.structure.Function").parentIds(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x3d018fbe2430770eL)).sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "7918996842015093048")).create();
  }
  private static ConceptDescriptor createDescriptorForSetAssignmentStatement() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.SetAssignmentStatement", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0xaaeb60067637537L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "neo4j.cypher.structure.IOrderedExpression").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x7a3bb6c9eea6c001L)).childDescriptors(new ConceptDescriptorBuilder.Link(0xaaeb60067637538L, "leftExpression", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false, new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "769752699177760056")), new ConceptDescriptorBuilder.Link(0xaaeb60067637539L, "rightExpression", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false, new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "769752699177760057"))).children(new String[]{"leftExpression", "rightExpression"}, new boolean[]{false, false}).sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "769752699177760055")).create();
  }
  private static ConceptDescriptor createDescriptorForSetStatement() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.SetStatement", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x3528712027d600edL)).super_("neo4j.cypher.structure.CypherStatement").version(1).super_(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x4cbf2dbb00e54a8bL)).parents("neo4j.cypher.structure.CypherStatement", "neo4j.cypher.structure.IWriteStatement").parentIds(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x4cbf2dbb00e54a8bL), MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x2376f01d7fbd1fa3L)).childDescriptors(new ConceptDescriptorBuilder.Link(0x3528712027d600f0L, "setAssignmentStatement", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0xaaeb60067637537L), false, true, false, new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "3830435865999835376"))).children(new String[]{"setAssignmentStatement"}, new boolean[]{true}).alias("set", "").sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "3830435865999835373")).create();
  }
  private static ConceptDescriptor createDescriptorForShortestPathFunction() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.ShortestPathFunction", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x432a0a2a4da776daL)).super_("neo4j.cypher.structure.PathFunction").version(1).super_(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x432a0a2a4da776d7L)).parents("neo4j.cypher.structure.PathFunction").parentIds(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x432a0a2a4da776d7L)).alias("shortestPath", "").sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "4839691926370744026")).create();
  }
  private static ConceptDescriptor createDescriptorForSignMathFunction() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.SignMathFunction", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x3528712027d43f22L)).super_("neo4j.cypher.structure.MathFunction").version(1).super_(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x3528712027d43f1eL)).parents("neo4j.cypher.structure.MathFunction").parentIds(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x3528712027d43f1eL)).alias("sign", "").sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "3830435865999720226")).create();
  }
  private static ConceptDescriptor createDescriptorForSinglePredicateFunction() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.SinglePredicateFunction", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x4841a8f1042c9031L)).super_("neo4j.cypher.structure.PredicateFunction").version(1).super_(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x4841a8f1042c9027L)).parents("neo4j.cypher.structure.PredicateFunction").parentIds(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x4841a8f1042c9027L)).alias("single", "").sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "5206628397327618097")).create();
  }
  private static ConceptDescriptor createDescriptorForSkipStatement() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.SkipStatement", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x2959fa271e1657eaL)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).childDescriptors(new ConceptDescriptorBuilder.Link(0x5d9f557d4135ace6L, "skipItems", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), true, false, false, new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "6746204763277602022"))).children(new String[]{"skipItems"}, new boolean[]{false}).alias("skip", "").sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "2979687674397743082")).create();
  }
  private static ConceptDescriptor createDescriptorForSqrtMathFunction() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.SqrtMathFunction", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x3528712027d43f21L)).super_("neo4j.cypher.structure.MathFunction").version(1).super_(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x3528712027d43f1eL)).parents("neo4j.cypher.structure.MathFunction").parentIds(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x3528712027d43f1eL)).alias("sqrt", "").sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "3830435865999720225")).create();
  }
  private static ConceptDescriptor createDescriptorForStartAssignmentStatement() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.StartAssignmentStatement", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x119ac58303ba8e10L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "neo4j.cypher.structure.IOrderedExpression").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x7a3bb6c9eea6c001L)).childDescriptors(new ConceptDescriptorBuilder.Link(0x119ac58303ba8e16L, "node1", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x119ac58303ba8e11L), false, false, false, new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "1268543411552161302")), new ConceptDescriptorBuilder.Link(0x119ac58303bb839aL, "index", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x119ac58303bb837bL), false, false, false, new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "1268543411552224154"))).children(new String[]{"node1", "index"}, new boolean[]{false, false}).sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "1268543411552161296")).create();
  }
  private static ConceptDescriptor createDescriptorForStartStatement() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.StartStatement", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x3d018fbe2438aca4L)).super_("neo4j.cypher.structure.CypherStatement").version(1).super_(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x4cbf2dbb00e54a8bL)).parents("neo4j.cypher.structure.CypherStatement").parentIds(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x4cbf2dbb00e54a8bL)).childDescriptors(new ConceptDescriptorBuilder.Link(0x119ac58303bc2fc7L, "startStatements", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x119ac58303ba8e10L), false, true, false, new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "1268543411552268231"))).children(new String[]{"startStatements"}, new boolean[]{true}).alias("start", "").sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "4395952758104566948")).create();
  }
  private static ConceptDescriptor createDescriptorForStrStringFunction() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.StrStringFunction", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x12636aedaa4dea3eL)).super_("neo4j.cypher.structure.StringFunction").version(1).super_(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x12636aedaa4dea12L)).parents("neo4j.cypher.structure.StringFunction").parentIds(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x12636aedaa4dea12L)).childDescriptors(new ConceptDescriptorBuilder.Link(0x12636aedaa4dea40L, "expression", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false, new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "1325020284374084160"))).children(new String[]{"expression"}, new boolean[]{false}).alias("str", "returns a string representation of the expression").sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "1325020284374084158")).create();
  }
  private static ConceptDescriptor createDescriptorForStringFunction() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.StringFunction", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x12636aedaa4dea12L)).super_("neo4j.cypher.structure.Function").version(1).super_(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x3d018fbe2430770eL)).parents("neo4j.cypher.structure.Function").parentIds(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x3d018fbe2430770eL)).abstract_().sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "1325020284374084114")).create();
  }
  private static ConceptDescriptor createDescriptorForSubstringMStringFunction() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.SubstringMStringFunction", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x12636aedaa4df204L)).super_("neo4j.cypher.structure.ModifyStringFunction").version(1).super_(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x12636aedaa4dea3fL)).parents("neo4j.cypher.structure.ModifyStringFunction").parentIds(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x12636aedaa4dea3fL)).childDescriptors(new ConceptDescriptorBuilder.Link(0x12636aedaa4df205L, "start", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false, new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "1325020284374086149")), new ConceptDescriptorBuilder.Link(0x12636aedaa4df206L, "length", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false, new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "1325020284374086150"))).children(new String[]{"start", "length"}, new boolean[]{false, false}).alias("substring", "returns a substring of the original, with a 0-based index start and length").sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "1325020284374086148")).create();
  }
  private static ConceptDescriptor createDescriptorForSumAggregate() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.SumAggregate", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x2546b228cbcc89d9L)).super_("neo4j.cypher.structure.AggregateFunction").version(1).super_(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x2546b228cbcc89daL)).parents("neo4j.cypher.structure.AggregateFunction").parentIds(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x2546b228cbcc89daL)).alias("sum", "").sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "2686030116060695001")).create();
  }
  private static ConceptDescriptor createDescriptorForTailCollFunction() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.TailCollFunction", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x3528712027d43f18L)).super_("neo4j.cypher.structure.CollectionFunction").version(1).super_(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x3528712027d3fd22L)).parents("neo4j.cypher.structure.CollectionFunction").parentIds(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x3528712027d3fd22L)).childDescriptors(new ConceptDescriptorBuilder.Link(0x6de5edabd1bff145L, "expression", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false, new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "7918996842015093061"))).children(new String[]{"expression"}, new boolean[]{false}).alias("tail", "").sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "3830435865999720216")).create();
  }
  private static ConceptDescriptor createDescriptorForTimestampScalarFunction() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.TimestampScalarFunction", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x3d300249aae5f5ffL)).super_("neo4j.cypher.structure.ScalarFunction").version(1).super_(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x6de5edabd1bff138L)).parents("neo4j.cypher.structure.ScalarFunction").parentIds(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x6de5edabd1bff138L)).alias("timestamp", "").sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "4409026550618781183")).create();
  }
  private static ConceptDescriptor createDescriptorForTrimMStringFunction() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.TrimMStringFunction", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x12636aedaa4e3f0cL)).super_("neo4j.cypher.structure.ModifyStringFunction").version(1).super_(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x12636aedaa4dea3fL)).parents("neo4j.cypher.structure.ModifyStringFunction").parentIds(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x12636aedaa4dea3fL)).alias("trim", "returns the original string with whitespace removed from both sides").sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "1325020284374105868")).create();
  }
  private static ConceptDescriptor createDescriptorForTypeScalarFunction() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.TypeScalarFunction", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x6de5edabd1c133e1L)).super_("neo4j.cypher.structure.ScalarFunction").version(1).super_(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x6de5edabd1bff138L)).parents("neo4j.cypher.structure.ScalarFunction").parentIds(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x6de5edabd1bff138L)).childDescriptors(new ConceptDescriptorBuilder.Link(0x6de5edabd1c164a9L, "namedRelationshipRef", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x6de5edabd1c16494L), false, false, false, new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "7918996842015188137"))).children(new String[]{"namedRelationshipRef"}, new boolean[]{false}).alias("type", "").sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "7918996842015175649")).create();
  }
  private static ConceptDescriptor createDescriptorForUndirectedRelationship() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.UndirectedRelationship", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x2546b228cbcc64edL)).super_("neo4j.cypher.structure.Relationship").version(1).super_(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x637ffba7f2948fabL)).parents("neo4j.cypher.structure.Relationship").parentIds(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x637ffba7f2948fabL)).alias("--", "").sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "2686030116060685549")).create();
  }
  private static ConceptDescriptor createDescriptorForUpperMStringFunction() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.UpperMStringFunction", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x12636aedaa4f4219L)).super_("neo4j.cypher.structure.ModifyStringFunction").version(1).super_(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x12636aedaa4dea3fL)).parents("neo4j.cypher.structure.ModifyStringFunction").parentIds(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x12636aedaa4dea3fL)).alias("upper", "returns the original string in uppercase").sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "1325020284374172185")).create();
  }
  private static ConceptDescriptor createDescriptorForWhereStatement() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.WhereStatement", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x3d018fbe24307714L)).super_("neo4j.cypher.structure.CypherStatement").version(1).super_(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x4cbf2dbb00e54a8bL)).parents("neo4j.cypher.structure.CypherStatement").parentIds(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x4cbf2dbb00e54a8bL)).childDescriptors(new ConceptDescriptorBuilder.Link(0x3528712027d0ae2eL, "expression", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false, new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "3830435865999486510"))).children(new String[]{"expression"}, new boolean[]{false}).alias("where", "").sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "4395952758104028948")).create();
  }
  private static ConceptDescriptor createDescriptorForWithStatement() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.WithStatement", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x682da1dc24319e52L)).super_("neo4j.cypher.structure.CypherStatement").version(1).super_(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x4cbf2dbb00e54a8bL)).parents("neo4j.cypher.structure.CypherStatement").parentIds(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x4cbf2dbb00e54a8bL)).childDescriptors(new ConceptDescriptorBuilder.Link(0x682da1dc2431ca17L, "withExpression", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, true, false, new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "7506834120768604695"))).children(new String[]{"withExpression"}, new boolean[]{true}).alias("with", "").sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "7506834120768593490")).create();
  }
  private static ConceptDescriptor createDescriptorForWriteOnlyQueryExpression() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.WriteOnlyQueryExpression", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x2376f01d7fbd1fa5L)).super_("neo4j.cypher.structure.QueryExpression").version(1).super_(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x119ac58303b87b4fL)).parents("neo4j.cypher.structure.QueryExpression").parentIds(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x119ac58303b87b4fL)).childDescriptors(new ConceptDescriptorBuilder.Link(0x2376f01d7fbe309fL, "createStatement", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x3528712027d600d9L), false, false, false, new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "2555493848067223711")), new ConceptDescriptorBuilder.Link(0x2376f01d7fbe30a0L, "writeStatement", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x2376f01d7fbd1fa3L), true, true, false, new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "2555493848067223712"))).children(new String[]{"createStatement", "writeStatement"}, new boolean[]{false, true}).abstract_().alias("woq", "").sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "2555493848067153829")).create();
  }
  private static ConceptDescriptor createDescriptorForWriteOnlyQueryStringExpression() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.WriteOnlyQueryStringExpression", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x52178e89218a4844L)).super_("neo4j.cypher.structure.WriteOnlyQueryExpression").version(1).super_(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x2376f01d7fbd1fa5L)).parents("neo4j.cypher.structure.WriteOnlyQueryExpression", "neo4j.cypher.structure.QueryStringExpression").parentIds(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x2376f01d7fbd1fa5L), MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x52178e89215b5968L)).alias("woqs", "").sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "5915353355198810180")).create();
  }
  private static ConceptDescriptor createDescriptorForWriteOnlyQueryTupleExpression() {
    return new ConceptDescriptorBuilder("neo4j.cypher.structure.WriteOnlyQueryTupleExpression", MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x52178e89215b61ecL)).super_("neo4j.cypher.structure.WriteOnlyQueryExpression").version(1).super_(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x2376f01d7fbd1fa5L)).parents("neo4j.cypher.structure.WriteOnlyQueryExpression", "neo4j.cypher.structure.QueryTupleExpression").parentIds(MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x2376f01d7fbd1fa5L), MetaIdFactory.conceptId(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x52178e89215b5fe0L)).alias("woqt", "").sourceNode(new SNodePointer("r:f744ecfb-e681-4d00-8f57-1ca9664f32ee(neo4j.cypher.structure)", "5915353355195736556")).create();
  }
}
