package neo4j.cypher.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import java.util.Iterator;
import jetbrains.mps.baseLanguage.structure.Expression;
import java.util.List;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class WithStatement extends CypherStatement {
  public static final String concept = "neo4j.cypher.structure.WithStatement";
  public static final String WITH_EXPRESSION = "withExpression";

  public WithStatement(SNode node) {
    super(node);
  }

  public int getWithExpressionsCount() {
    return this.getChildCount(WithStatement.WITH_EXPRESSION);
  }

  public Iterator<Expression> withExpressions() {
    return this.children(Expression.class, WithStatement.WITH_EXPRESSION);
  }

  public List<Expression> getWithExpressions() {
    return this.getChildren(Expression.class, WithStatement.WITH_EXPRESSION);
  }

  public void addWithExpression(Expression node) {
    this.addChild(WithStatement.WITH_EXPRESSION, node);
  }

  public void insertWithExpression(Expression prev, Expression node) {
    this.insertChild(prev, WithStatement.WITH_EXPRESSION, node);
  }

  public static WithStatement newInstance(SModel sm, boolean init) {
    return (WithStatement) SModelUtil_new.instantiateConceptDeclaration("neo4j.cypher.structure.WithStatement", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static WithStatement newInstance(SModel sm) {
    return WithStatement.newInstance(sm, false);
  }
}
