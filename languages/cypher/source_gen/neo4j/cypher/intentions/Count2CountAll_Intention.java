package neo4j.cypher.intentions;

/*Generated by MPS */

import jetbrains.mps.intentions.BaseIntention;
import jetbrains.mps.intentions.Intention;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.nodeEditor.EditorContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;

public class Count2CountAll_Intention extends BaseIntention implements Intention {
  public Count2CountAll_Intention() {
  }

  public String getConcept() {
    return "neo4j.cypher.structure.CountAggregate";
  }

  public boolean isParameterized() {
    return false;
  }

  public boolean isErrorIntention() {
    return false;
  }

  public boolean isAvailableInChildNodes() {
    return false;
  }

  public String getDescription(final SNode node, final EditorContext editorContext) {
    return "Converts COUNT(expr) function into COUNT(*) function";
  }

  public void execute(final SNode node, final EditorContext editorContext) {
    SNode countAllAggregate = SConceptOperations.createNewNode("neo4j.cypher.structure.CountAllAggregate", null);
    SNodeOperations.replaceWithAnother(node, countAllAggregate);
    editorContext.select(countAllAggregate);
  }

  public String getLocationString() {
    return "neo4j.cypher.intentions";
  }
}
