package neo4j.cypher.behavior;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import org.jetbrains.mps.openapi.language.SConceptRepository;
import jetbrains.mps.util.NameUtil;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;

public class INamedNullableIdentifier_Behavior {
  public static void init(SNode thisNode) {
  }

  public static boolean call_isCorrectNullableIdentifierName_5206628397327427654(SAbstractConcept thisConcept, String name) {
    // nullable parameters 

    if (name != null && name.length() >= 2 && (name.charAt(name.length() - 1) == '!' || name.charAt(name.length() - 1) == '?')) {
      // check for correct identifier name without nullable ending parameter ! or ? 
      return INamedIdentifier_Behavior.call_isCorrectIdentifierName_5206628397327427489(SConceptRepository.getInstance().getConcept(NameUtil.nodeFQName(SConceptOperations.findConceptDeclaration("neo4j.cypher.structure.INamedIdentifier"))), name.substring(0, name.length() - 1));
    }

    return INamedIdentifier_Behavior.call_isCorrectIdentifierName_5206628397327427489(SConceptRepository.getInstance().getConcept(NameUtil.nodeFQName(SConceptOperations.findConceptDeclaration("neo4j.cypher.structure.INamedIdentifier"))), name);
  }
}
