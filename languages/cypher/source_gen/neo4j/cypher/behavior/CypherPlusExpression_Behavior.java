package neo4j.cypher.behavior;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.project.IModule;
import jetbrains.mps.baseLanguage.behavior.Expression_Behavior;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;

public class CypherPlusExpression_Behavior {
  public static void init(SNode thisNode) {
  }

  public static Object virtual_eval_1213877519769(SNode thisNode, IModule module) {
    Object leftExpression = Expression_Behavior.call_eval_1213877519769(SLinkOperations.getTarget(thisNode, "leftExpression", true), module);
    Object rightExpression = Expression_Behavior.call_eval_1213877519769(SLinkOperations.getTarget(thisNode, "rightExpression", true), module);
    if (leftExpression instanceof Integer && rightExpression instanceof Integer) {
      return as_109876_a0a0a2a1_0(leftExpression, Integer.class) + as_109876_a0a0a2a1(rightExpression, Integer.class);
    }

    return Expression_Behavior.callSuper_eval_1213877519769(thisNode, "neo4j.cypher.structure.CypherPlusExpression", module);
  }

  private static <T> T as_109876_a0a0a2a1(Object o, Class<T> type) {
    return (type.isInstance(o) ?
      (T) o :
      null
    );
  }

  private static <T> T as_109876_a0a0a2a1_0(Object o, Class<T> type) {
    return (type.isInstance(o) ?
      (T) o :
      null
    );
  }
}
