package neo4j.cypher.behavior;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BehaviorDescriptor;
import java.util.Arrays;
import jetbrains.mps.smodel.runtime.interpreted.BehaviorAspectInterpreted;

public class BehaviorAspectDescriptor implements jetbrains.mps.smodel.runtime.BehaviorAspectDescriptor {
  private static String[] stringSwitchCases_846f5o_a0a0a = new String[]{"neo4j.cypher.structure.AllIndex", "neo4j.cypher.structure.CountAggregate", "neo4j.cypher.structure.CypherExpression", "neo4j.cypher.structure.IdIndex", "neo4j.cypher.structure.KeyValueIndex", "neo4j.cypher.structure.LuceneIndex", "neo4j.cypher.structure.MaxAggregate", "neo4j.cypher.structure.MinAggregate", "neo4j.cypher.structure.NamedNode", "neo4j.cypher.structure.NamedTypedLRRelationship", "neo4j.cypher.structure.NamedTypedRLRelationship", "neo4j.cypher.structure.NamedTypedRelationship", "neo4j.cypher.structure.NamedUntypedLRRelationship", "neo4j.cypher.structure.NamedUntypedRLRelationship", "neo4j.cypher.structure.NamedUntypedRelationship", "neo4j.cypher.structure.QueryEmptyStatement", "neo4j.cypher.structure.QuerySheet", "neo4j.cypher.structure.QueryStatement", "neo4j.cypher.structure.ReadOnlyQueryExpression", "neo4j.cypher.structure.ReadWriteQueryExpression", "neo4j.cypher.structure.RelationshipType", "neo4j.cypher.structure.SumAggregate", "neo4j.cypher.structure.UnnamedNode", "neo4j.cypher.structure.UnnamedTypedLRRelationship", "neo4j.cypher.structure.UnnamedTypedRLRelationship", "neo4j.cypher.structure.UnnamedTypedRelationship", "neo4j.cypher.structure.UnnamedUntypedLRRelationship", "neo4j.cypher.structure.UnnamedUntypedRLRelationship", "neo4j.cypher.structure.UnnamedUntypedRelationship"};

  public BehaviorAspectDescriptor() {
  }

  public BehaviorDescriptor getDescriptor(String fqName) {
    switch (Arrays.binarySearch(stringSwitchCases_846f5o_a0a0a, fqName)) {
      case 16:
        return new QuerySheet_BehaviorDescriptor();
      case 17:
        return new QueryStatement_BehaviorDescriptor();
      case 18:
        return new ReadOnlyQueryExpression_BehaviorDescriptor();
      case 19:
        return new ReadWriteQueryExpression_BehaviorDescriptor();
      case 8:
        return new NamedNode_BehaviorDescriptor();
      case 4:
        return new KeyValueIndex_BehaviorDescriptor();
      case 5:
        return new LuceneIndex_BehaviorDescriptor();
      case 3:
        return new IdIndex_BehaviorDescriptor();
      case 0:
        return new AllIndex_BehaviorDescriptor();
      case 15:
        return new QueryEmptyStatement_BehaviorDescriptor();
      case 22:
        return new UnnamedNode_BehaviorDescriptor();
      case 26:
        return new UnnamedUntypedLRRelationship_BehaviorDescriptor();
      case 27:
        return new UnnamedUntypedRLRelationship_BehaviorDescriptor();
      case 28:
        return new UnnamedUntypedRelationship_BehaviorDescriptor();
      case 12:
        return new NamedUntypedLRRelationship_BehaviorDescriptor();
      case 20:
        return new RelationshipType_BehaviorDescriptor();
      case 23:
        return new UnnamedTypedLRRelationship_BehaviorDescriptor();
      case 24:
        return new UnnamedTypedRLRelationship_BehaviorDescriptor();
      case 25:
        return new UnnamedTypedRelationship_BehaviorDescriptor();
      case 13:
        return new NamedUntypedRLRelationship_BehaviorDescriptor();
      case 14:
        return new NamedUntypedRelationship_BehaviorDescriptor();
      case 9:
        return new NamedTypedLRRelationship_BehaviorDescriptor();
      case 10:
        return new NamedTypedRLRelationship_BehaviorDescriptor();
      case 11:
        return new NamedTypedRelationship_BehaviorDescriptor();
      case 1:
        return new CountAggregate_BehaviorDescriptor();
      case 2:
        return new CypherExpression_BehaviorDescriptor();
      case 21:
        return new SumAggregate_BehaviorDescriptor();
      case 6:
        return new MaxAggregate_BehaviorDescriptor();
      case 7:
        return new MinAggregate_BehaviorDescriptor();
      default:
        return BehaviorAspectInterpreted.getInstance().getDescriptor(fqName);
    }
  }
}
