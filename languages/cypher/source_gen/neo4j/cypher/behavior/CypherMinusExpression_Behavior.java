package neo4j.cypher.behavior;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import org.jetbrains.mps.openapi.module.SModule;
import jetbrains.mps.smodel.behaviour.BehaviorReflection;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public class CypherMinusExpression_Behavior {
  public static void init(SNode thisNode) {
  }

  public static Object virtual_eval_1213877519769(SNode thisNode, SModule module) {
    Object leftExpression = BehaviorReflection.invokeVirtual(Object.class, SLinkOperations.getTarget(thisNode, "leftExpression", true), "virtual_eval_1213877519769", new Object[]{module});
    Object rightExpression = BehaviorReflection.invokeVirtual(Object.class, SLinkOperations.getTarget(thisNode, "rightExpression", true), "virtual_eval_1213877519769", new Object[]{module});
    if (leftExpression instanceof Integer && rightExpression instanceof Integer) {
      return as_81mg02_a0a0a2a1(leftExpression, Integer.class) - as_81mg02_a0a0a2a1_0(rightExpression, Integer.class);
    }

    return BehaviorReflection.invokeSuper(Object.class, thisNode, "jetbrains.mps.baseLanguage.structure.MinusExpression", "virtual_eval_1213877519769", new Object[]{module});
  }

  public static int virtual_getPriority_1262430001741497858(SAbstractConcept thisConcept) {
    return 2;
  }

  private static <T> T as_81mg02_a0a0a2a1(Object o, Class<T> type) {
    return (type.isInstance(o) ?
      (T) o :
      null
    );
  }

  private static <T> T as_81mg02_a0a0a2a1_0(Object o, Class<T> type) {
    return (type.isInstance(o) ?
      (T) o :
      null
    );
  }
}
