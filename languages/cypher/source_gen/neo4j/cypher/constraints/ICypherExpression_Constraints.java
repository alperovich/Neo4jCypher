package neo4j.cypher.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.base.BaseConstraintsDescriptor;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.smodel.runtime.CheckingNodeContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.smodel.SNodePointer;

public class ICypherExpression_Constraints extends BaseConstraintsDescriptor {
  public ICypherExpression_Constraints() {
    super("neo4j.cypher.structure.ICypherExpression");
  }

  @Override
  public boolean hasOwnCanBeChildMethod() {
    return true;
  }

  @Override
  public boolean canBeChild(@Nullable SNode node, SNode parentNode, SNode link, SNode childConcept, final IOperationContext operationContext, @Nullable final CheckingNodeContext checkingNodeContext) {
    boolean result = static_canBeAChild(node, parentNode, link, childConcept, operationContext);

    if (!(result) && checkingNodeContext != null) {
      checkingNodeContext.setBreakingNode(canBeChildBreakingPoint);
    }

    return result;
  }

  public static boolean static_canBeAChild(SNode node, SNode parentNode, SNode link, SNode childConcept, final IOperationContext operationContext) {
    return SConceptOperations.isSubConceptOf(SNodeOperations.getConceptDeclaration(parentNode), "neo4j.cypher.structure.QueryExpression") || (SNodeOperations.getAncestor(parentNode, "neo4j.cypher.structure.QueryExpression", false, false) != null) || SConceptOperations.isSubConceptOf(SNodeOperations.getConceptDeclaration(parentNode), "jetbrains.mps.lang.generator.structure.InlineTemplate_RuleConsequence") || (SNodeOperations.getAncestor(parentNode, "jetbrains.mps.lang.generator.structure.InlineTemplate_RuleConsequence", false, false) != null);
    // <node> 
  }

  private static SNodePointer canBeChildBreakingPoint = new SNodePointer("r:7c28ecee-5ab5-4b97-b9e6-691aea2e2951(neo4j.cypher.constraints)", "5915353355168151170");
}
