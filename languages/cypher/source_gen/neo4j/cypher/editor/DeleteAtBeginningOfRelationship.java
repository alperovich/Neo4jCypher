package neo4j.cypher.editor;

/*Generated by MPS */

import jetbrains.mps.openapi.editor.cells.EditorCell;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.openapi.editor.EditorContext;
import jetbrains.mps.openapi.editor.cells.CellActionType;
import jetbrains.mps.editor.runtime.cells.AbstractCellAction;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import neo4j.cypher.behavior.Relationship__BehaviorDescriptor;
import jetbrains.mps.editor.runtime.selection.SelectionUtil;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.openapi.editor.selection.SelectionManager;

public class DeleteAtBeginningOfRelationship {
  public static void setCellActions(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setAction(CellActionType.DELETE, new DeleteAtBeginningOfRelationship.DeleteAtBeginningOfRelationship_DELETE(node));
    editorCell.setAction(CellActionType.BACKSPACE, new DeleteAtBeginningOfRelationship.DeleteAtBeginningOfRelationship_BACKSPACE(node));
  }
  public static class DeleteAtBeginningOfRelationship_DELETE extends AbstractCellAction {
    /*package*/ SNode myNode;
    public DeleteAtBeginningOfRelationship_DELETE(SNode node) {
      this.myNode = node;
    }
    public void execute(EditorContext editorContext) {
      this.execute_internal(editorContext, this.myNode);
    }
    public void execute_internal(EditorContext editorContext, SNode node) {
      if (SNodeOperations.isInstanceOf(node, MetaAdapterFactory.getConcept(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x2546b228cbcc43a1L, "neo4j.cypher.structure.RLRelationship"))) {
        SNode uni = SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x2546b228cbcc64edL, "neo4j.cypher.structure.UndirectedRelationship"));
        Relationship__BehaviorDescriptor.copyRelationshipProperties_id5Hm4srjMhJY.invoke(uni, node);
        SNodeOperations.replaceWithAnother(node, uni);
        SelectionUtil.selectLabelCellAnSetCaret(editorContext, SLinkOperations.getTarget(uni, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xfbdeb6fecfL, 0xfbdeb7a11cL, "leftExpression")), SelectionManager.LAST_EDITABLE_CELL, -1);
      } else {
        SNode replacingNode = SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xfbdeb6fecfL, 0xfbdeb7a11cL, "leftExpression"));
        SNodeOperations.replaceWithAnother(node, replacingNode);
        SelectionUtil.selectLabelCellAnSetCaret(editorContext, replacingNode, SelectionManager.LAST_CELL, -1);
      }
    }
  }
  public static class DeleteAtBeginningOfRelationship_BACKSPACE extends AbstractCellAction {
    /*package*/ SNode myNode;
    public DeleteAtBeginningOfRelationship_BACKSPACE(SNode node) {
      this.myNode = node;
    }
    public void execute(EditorContext editorContext) {
      this.execute_internal(editorContext, this.myNode);
    }
    public void execute_internal(EditorContext editorContext, SNode node) {
      if (SNodeOperations.isInstanceOf(node, MetaAdapterFactory.getConcept(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x2546b228cbcc43a1L, "neo4j.cypher.structure.RLRelationship"))) {
        SNode uni = SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x2546b228cbcc64edL, "neo4j.cypher.structure.UndirectedRelationship"));
        Relationship__BehaviorDescriptor.copyRelationshipProperties_id5Hm4srjMhJY.invoke(uni, node);
        SNodeOperations.replaceWithAnother(node, uni);
        SelectionUtil.selectLabelCellAnSetCaret(editorContext, SLinkOperations.getTarget(uni, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xfbdeb6fecfL, 0xfbdeb7a11cL, "leftExpression")), SelectionManager.LAST_EDITABLE_CELL, -1);
      } else {
        SNode replacingNode = SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xfbdeb6fecfL, 0xfbdeb7a11cL, "leftExpression"));
        SNodeOperations.replaceWithAnother(node, replacingNode);
        SelectionUtil.selectLabelCellAnSetCaret(editorContext, replacingNode, SelectionManager.LAST_CELL, -1);
      }
    }
  }
}
