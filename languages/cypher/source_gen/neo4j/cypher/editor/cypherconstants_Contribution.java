package neo4j.cypher.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.menus.substitute.SubstituteMenuBase;
import org.jetbrains.annotations.NotNull;
import java.util.List;
import jetbrains.mps.lang.editor.menus.MenuPart;
import jetbrains.mps.openapi.editor.menus.substitute.SubstituteMenuItem;
import jetbrains.mps.openapi.editor.menus.substitute.SubstituteMenuContext;
import java.util.ArrayList;
import jetbrains.mps.lang.editor.menus.GroupMenuPart;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import java.util.Arrays;
import jetbrains.mps.lang.editor.menus.substitute.ConstraintsFilteringSubstituteMenuPartDecorator;
import jetbrains.mps.lang.editor.menus.substitute.SingleItemSubstituteMenuPart;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.lang.editor.menus.substitute.DefaultSubstituteMenuItem;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.smodel.action.SNodeFactoryOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import java.util.regex.Pattern;

public class cypherconstants_Contribution extends SubstituteMenuBase {
  public cypherconstants_Contribution() {
    super(true);
  }
  @NotNull
  @Override
  protected List<MenuPart<SubstituteMenuItem, SubstituteMenuContext>> getParts(final SubstituteMenuContext _context) {
    List<MenuPart<SubstituteMenuItem, SubstituteMenuContext>> result = new ArrayList<MenuPart<SubstituteMenuItem, SubstituteMenuContext>>();
    result.add(new cypherconstants_Contribution.SubstituteMenuPart_Group_797b0d_a());
    return result;
  }
  public class SubstituteMenuPart_Group_797b0d_a extends GroupMenuPart<SubstituteMenuItem, SubstituteMenuContext> {
    @Override
    protected boolean isApplicable(SubstituteMenuContext _context) {
      return SNodeOperations.getNodeAncestor(_context.getParentNode(), MetaAdapterFactory.getConcept(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x4cbf2dbb00e54a8bL, "neo4j.cypher.structure.CypherStatement"), false, false) != null;
    }

    @Override
    protected List<MenuPart<SubstituteMenuItem, SubstituteMenuContext>> getParts() {
      return Arrays.<MenuPart<SubstituteMenuItem, SubstituteMenuContext>>asList(new ConstraintsFilteringSubstituteMenuPartDecorator(new cypherconstants_Contribution.SubstituteMenuPart_Group_797b0d_a.SubstituteMenuPart_Action_797b0d_a0(), MetaAdapterFactory.getConcept(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x12636aedaa51802cL, "neo4j.cypher.structure.CypherIntegerConstant")));
    }
    private class SubstituteMenuPart_Action_797b0d_a0 extends SingleItemSubstituteMenuPart {

      @Nullable
      @Override
      protected SubstituteMenuItem createItem(SubstituteMenuContext _context) {
        return new cypherconstants_Contribution.SubstituteMenuPart_Group_797b0d_a.SubstituteMenuPart_Action_797b0d_a0.Item(_context);
      }
      private class Item extends DefaultSubstituteMenuItem {
        private final SubstituteMenuContext _context;
        public Item(SubstituteMenuContext context) {
          super(MetaAdapterFactory.getConcept(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x12636aedaa51802cL, "neo4j.cypher.structure.CypherIntegerConstant"), context.getParentNode(), context.getCurrentTargetNode(), context.getEditorContext());
          _context = context;
        }

        @Nullable
        @Override
        public SNode createNode(@NotNull String pattern) {
          SNode cypherIntConst = SNodeFactoryOperations.createNewNode(_context.getModel(), SNodeFactoryOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x12636aedaa51802cL, "neo4j.cypher.structure.CypherIntegerConstant")), null);
          try {
            SPropertyOperations.set(cypherIntConst, MetaAdapterFactory.getProperty(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x12636aedaa51802cL, 0xf8cc59b315L, "value"), "" + (Integer.parseInt(pattern)));
          } catch (NumberFormatException e) {
            SPropertyOperations.set(cypherIntConst, MetaAdapterFactory.getProperty(0xfa0e36f72d65493aL, 0x86382d9c4dbffdf7L, 0x12636aedaa51802cL, 0xf8cc59b315L, "value"), "" + (0));
          }
          return cypherIntConst;
        }
        @Nullable
        @Override
        public String getMatchingText(@NotNull String pattern) {
          return pattern;
        }
        @Override
        public boolean canExecute(@NotNull String pattern) {
          return canExecute_internal(pattern, false);
        }
        @Override
        public boolean canExecuteStrictly(@NotNull String pattern) {
          return canExecute_internal(pattern, true);
        }
        public boolean canExecute_internal(@NotNull String pattern, boolean strictly) {
          if (strictly) {
            return REGEXP_797b0d_a0a0a0a7c3c.matcher(pattern).matches();
          } else {
            return REGEXP_797b0d_a0a0a0a0h2d2.matcher(pattern).matches();
          }
        }
      }
    }
  }
  private static Pattern REGEXP_797b0d_a0a0a0a7c3c = Pattern.compile("-?\\d+", 0);
  private static Pattern REGEXP_797b0d_a0a0a0a0h2d2 = Pattern.compile("-?\\d*", 0);
}
